
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model AccountPhone
 * 
 */
export type AccountPhone = $Result.DefaultSelection<Prisma.$AccountPhonePayload>
/**
 * Model Call
 * 
 */
export type Call = $Result.DefaultSelection<Prisma.$CallPayload>
/**
 * Model AccountAction
 * 
 */
export type AccountAction = $Result.DefaultSelection<Prisma.$AccountActionPayload>
/**
 * Model UploadBatch
 * 
 */
export type UploadBatch = $Result.DefaultSelection<Prisma.$UploadBatchPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs>;

  /**
   * `prisma.accountPhone`: Exposes CRUD operations for the **AccountPhone** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AccountPhones
    * const accountPhones = await prisma.accountPhone.findMany()
    * ```
    */
  get accountPhone(): Prisma.AccountPhoneDelegate<ExtArgs>;

  /**
   * `prisma.call`: Exposes CRUD operations for the **Call** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Calls
    * const calls = await prisma.call.findMany()
    * ```
    */
  get call(): Prisma.CallDelegate<ExtArgs>;

  /**
   * `prisma.accountAction`: Exposes CRUD operations for the **AccountAction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AccountActions
    * const accountActions = await prisma.accountAction.findMany()
    * ```
    */
  get accountAction(): Prisma.AccountActionDelegate<ExtArgs>;

  /**
   * `prisma.uploadBatch`: Exposes CRUD operations for the **UploadBatch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UploadBatches
    * const uploadBatches = await prisma.uploadBatch.findMany()
    * ```
    */
  get uploadBatch(): Prisma.UploadBatchDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    RefreshToken: 'RefreshToken',
    Account: 'Account',
    AccountPhone: 'AccountPhone',
    Call: 'Call',
    AccountAction: 'AccountAction',
    UploadBatch: 'UploadBatch'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "refreshToken" | "account" | "accountPhone" | "call" | "accountAction" | "uploadBatch"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      AccountPhone: {
        payload: Prisma.$AccountPhonePayload<ExtArgs>
        fields: Prisma.AccountPhoneFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountPhoneFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountPhoneFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          findFirst: {
            args: Prisma.AccountPhoneFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountPhoneFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          findMany: {
            args: Prisma.AccountPhoneFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>[]
          }
          create: {
            args: Prisma.AccountPhoneCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          createMany: {
            args: Prisma.AccountPhoneCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountPhoneCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>[]
          }
          delete: {
            args: Prisma.AccountPhoneDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          update: {
            args: Prisma.AccountPhoneUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          deleteMany: {
            args: Prisma.AccountPhoneDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountPhoneUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountPhoneUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPhonePayload>
          }
          aggregate: {
            args: Prisma.AccountPhoneAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccountPhone>
          }
          groupBy: {
            args: Prisma.AccountPhoneGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountPhoneGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountPhoneCountArgs<ExtArgs>
            result: $Utils.Optional<AccountPhoneCountAggregateOutputType> | number
          }
        }
      }
      Call: {
        payload: Prisma.$CallPayload<ExtArgs>
        fields: Prisma.CallFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CallFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CallFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          findFirst: {
            args: Prisma.CallFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CallFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          findMany: {
            args: Prisma.CallFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>[]
          }
          create: {
            args: Prisma.CallCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          createMany: {
            args: Prisma.CallCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CallCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>[]
          }
          delete: {
            args: Prisma.CallDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          update: {
            args: Prisma.CallUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          deleteMany: {
            args: Prisma.CallDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CallUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CallUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CallPayload>
          }
          aggregate: {
            args: Prisma.CallAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCall>
          }
          groupBy: {
            args: Prisma.CallGroupByArgs<ExtArgs>
            result: $Utils.Optional<CallGroupByOutputType>[]
          }
          count: {
            args: Prisma.CallCountArgs<ExtArgs>
            result: $Utils.Optional<CallCountAggregateOutputType> | number
          }
        }
      }
      AccountAction: {
        payload: Prisma.$AccountActionPayload<ExtArgs>
        fields: Prisma.AccountActionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountActionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountActionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          findFirst: {
            args: Prisma.AccountActionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountActionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          findMany: {
            args: Prisma.AccountActionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>[]
          }
          create: {
            args: Prisma.AccountActionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          createMany: {
            args: Prisma.AccountActionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountActionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>[]
          }
          delete: {
            args: Prisma.AccountActionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          update: {
            args: Prisma.AccountActionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          deleteMany: {
            args: Prisma.AccountActionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountActionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountActionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountActionPayload>
          }
          aggregate: {
            args: Prisma.AccountActionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccountAction>
          }
          groupBy: {
            args: Prisma.AccountActionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountActionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountActionCountArgs<ExtArgs>
            result: $Utils.Optional<AccountActionCountAggregateOutputType> | number
          }
        }
      }
      UploadBatch: {
        payload: Prisma.$UploadBatchPayload<ExtArgs>
        fields: Prisma.UploadBatchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UploadBatchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UploadBatchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          findFirst: {
            args: Prisma.UploadBatchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UploadBatchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          findMany: {
            args: Prisma.UploadBatchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>[]
          }
          create: {
            args: Prisma.UploadBatchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          createMany: {
            args: Prisma.UploadBatchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UploadBatchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>[]
          }
          delete: {
            args: Prisma.UploadBatchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          update: {
            args: Prisma.UploadBatchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          deleteMany: {
            args: Prisma.UploadBatchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UploadBatchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UploadBatchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UploadBatchPayload>
          }
          aggregate: {
            args: Prisma.UploadBatchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUploadBatch>
          }
          groupBy: {
            args: Prisma.UploadBatchGroupByArgs<ExtArgs>
            result: $Utils.Optional<UploadBatchGroupByOutputType>[]
          }
          count: {
            args: Prisma.UploadBatchCountArgs<ExtArgs>
            result: $Utils.Optional<UploadBatchCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accountActions: number
    assignedAccounts: number
    calls: number
    refreshTokens: number
    uploadBatches: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountActions?: boolean | UserCountOutputTypeCountAccountActionsArgs
    assignedAccounts?: boolean | UserCountOutputTypeCountAssignedAccountsArgs
    calls?: boolean | UserCountOutputTypeCountCallsArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
    uploadBatches?: boolean | UserCountOutputTypeCountUploadBatchesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountActionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCallsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CallWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUploadBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UploadBatchWhereInput
  }


  /**
   * Count Type AccountCountOutputType
   */

  export type AccountCountOutputType = {
    actions: number
    phoneNumbers: number
    calls: number
  }

  export type AccountCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actions?: boolean | AccountCountOutputTypeCountActionsArgs
    phoneNumbers?: boolean | AccountCountOutputTypeCountPhoneNumbersArgs
    calls?: boolean | AccountCountOutputTypeCountCallsArgs
  }

  // Custom InputTypes
  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountCountOutputType
     */
    select?: AccountCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeCountActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountActionWhereInput
  }

  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeCountPhoneNumbersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountPhoneWhereInput
  }

  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeCountCallsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CallWhereInput
  }


  /**
   * Count Type AccountPhoneCountOutputType
   */

  export type AccountPhoneCountOutputType = {
    calls: number
  }

  export type AccountPhoneCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    calls?: boolean | AccountPhoneCountOutputTypeCountCallsArgs
  }

  // Custom InputTypes
  /**
   * AccountPhoneCountOutputType without action
   */
  export type AccountPhoneCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhoneCountOutputType
     */
    select?: AccountPhoneCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AccountPhoneCountOutputType without action
   */
  export type AccountPhoneCountOutputTypeCountCallsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CallWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserSumAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    emailVerified: boolean | null
    emailVerifyToken: string | null
    emailVerifyExpires: Date | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    failedLoginAttempts: number | null
    accountLockedUntil: Date | null
    lastFailedLogin: Date | null
    passwordChangedAt: Date | null
    mustChangePassword: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    emailVerified: boolean | null
    emailVerifyToken: string | null
    emailVerifyExpires: Date | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    failedLoginAttempts: number | null
    accountLockedUntil: Date | null
    lastFailedLogin: Date | null
    passwordChangedAt: Date | null
    mustChangePassword: boolean | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    firstName: number
    lastName: number
    role: number
    isActive: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    emailVerified: number
    emailVerifyToken: number
    emailVerifyExpires: number
    passwordResetToken: number
    passwordResetExpires: number
    failedLoginAttempts: number
    accountLockedUntil: number
    lastFailedLogin: number
    passwordChangedAt: number
    mustChangePassword: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserSumAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    role?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    emailVerified?: true
    emailVerifyToken?: true
    emailVerifyExpires?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    failedLoginAttempts?: true
    accountLockedUntil?: true
    lastFailedLogin?: true
    passwordChangedAt?: true
    mustChangePassword?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    role?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    emailVerified?: true
    emailVerifyToken?: true
    emailVerifyExpires?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    failedLoginAttempts?: true
    accountLockedUntil?: true
    lastFailedLogin?: true
    passwordChangedAt?: true
    mustChangePassword?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    role?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    emailVerified?: true
    emailVerifyToken?: true
    emailVerifyExpires?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    failedLoginAttempts?: true
    accountLockedUntil?: true
    lastFailedLogin?: true
    passwordChangedAt?: true
    mustChangePassword?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    firstName: string
    lastName: string
    role: string
    isActive: boolean
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    emailVerified: boolean
    emailVerifyToken: string | null
    emailVerifyExpires: Date | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    failedLoginAttempts: number
    accountLockedUntil: Date | null
    lastFailedLogin: Date | null
    passwordChangedAt: Date
    mustChangePassword: boolean
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    emailVerified?: boolean
    emailVerifyToken?: boolean
    emailVerifyExpires?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    failedLoginAttempts?: boolean
    accountLockedUntil?: boolean
    lastFailedLogin?: boolean
    passwordChangedAt?: boolean
    mustChangePassword?: boolean
    accountActions?: boolean | User$accountActionsArgs<ExtArgs>
    assignedAccounts?: boolean | User$assignedAccountsArgs<ExtArgs>
    calls?: boolean | User$callsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    uploadBatches?: boolean | User$uploadBatchesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    emailVerified?: boolean
    emailVerifyToken?: boolean
    emailVerifyExpires?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    failedLoginAttempts?: boolean
    accountLockedUntil?: boolean
    lastFailedLogin?: boolean
    passwordChangedAt?: boolean
    mustChangePassword?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    emailVerified?: boolean
    emailVerifyToken?: boolean
    emailVerifyExpires?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    failedLoginAttempts?: boolean
    accountLockedUntil?: boolean
    lastFailedLogin?: boolean
    passwordChangedAt?: boolean
    mustChangePassword?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountActions?: boolean | User$accountActionsArgs<ExtArgs>
    assignedAccounts?: boolean | User$assignedAccountsArgs<ExtArgs>
    calls?: boolean | User$callsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    uploadBatches?: boolean | User$uploadBatchesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accountActions: Prisma.$AccountActionPayload<ExtArgs>[]
      assignedAccounts: Prisma.$AccountPayload<ExtArgs>[]
      calls: Prisma.$CallPayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
      uploadBatches: Prisma.$UploadBatchPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      firstName: string
      lastName: string
      role: string
      isActive: boolean
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
      emailVerified: boolean
      emailVerifyToken: string | null
      emailVerifyExpires: Date | null
      passwordResetToken: string | null
      passwordResetExpires: Date | null
      failedLoginAttempts: number
      accountLockedUntil: Date | null
      lastFailedLogin: Date | null
      passwordChangedAt: Date
      mustChangePassword: boolean
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accountActions<T extends User$accountActionsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountActionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findMany"> | Null>
    assignedAccounts<T extends User$assignedAccountsArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany"> | Null>
    calls<T extends User$callsArgs<ExtArgs> = {}>(args?: Subset<T, User$callsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findMany"> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    uploadBatches<T extends User$uploadBatchesArgs<ExtArgs> = {}>(args?: Subset<T, User$uploadBatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly lastLogin: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerifyToken: FieldRef<"User", 'String'>
    readonly emailVerifyExpires: FieldRef<"User", 'DateTime'>
    readonly passwordResetToken: FieldRef<"User", 'String'>
    readonly passwordResetExpires: FieldRef<"User", 'DateTime'>
    readonly failedLoginAttempts: FieldRef<"User", 'Int'>
    readonly accountLockedUntil: FieldRef<"User", 'DateTime'>
    readonly lastFailedLogin: FieldRef<"User", 'DateTime'>
    readonly passwordChangedAt: FieldRef<"User", 'DateTime'>
    readonly mustChangePassword: FieldRef<"User", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.accountActions
   */
  export type User$accountActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    where?: AccountActionWhereInput
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    cursor?: AccountActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountActionScalarFieldEnum | AccountActionScalarFieldEnum[]
  }

  /**
   * User.assignedAccounts
   */
  export type User$assignedAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.calls
   */
  export type User$callsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    where?: CallWhereInput
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    cursor?: CallWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User.uploadBatches
   */
  export type User$uploadBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    where?: UploadBatchWhereInput
    orderBy?: UploadBatchOrderByWithRelationInput | UploadBatchOrderByWithRelationInput[]
    cursor?: UploadBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UploadBatchScalarFieldEnum | UploadBatchScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */ 
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    originalAmount: number | null
    currentBalance: number | null
    amountPaid: number | null
    interestRate: number | null
    lastPaymentAmount: number | null
    daysPastDue: number | null
    contactAttempts: number | null
  }

  export type AccountSumAggregateOutputType = {
    originalAmount: number | null
    currentBalance: number | null
    amountPaid: number | null
    interestRate: number | null
    lastPaymentAmount: number | null
    daysPastDue: number | null
    contactAttempts: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    accountNumber: string | null
    firstName: string | null
    lastName: string | null
    fullName: string | null
    email: string | null
    address1: string | null
    address2: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    originalAmount: number | null
    currentBalance: number | null
    amountPaid: number | null
    interestRate: number | null
    lastPaymentDate: Date | null
    lastPaymentAmount: number | null
    status: string | null
    priority: string | null
    assignedAgentId: string | null
    assignedDate: Date | null
    preferredContactMethod: string | null
    bestTimeToCall: string | null
    timezone: string | null
    language: string | null
    daysPastDue: number | null
    lastContactDate: Date | null
    nextContactDate: Date | null
    contactAttempts: number | null
    doNotCall: boolean | null
    disputeFlag: boolean | null
    bankruptcyFlag: boolean | null
    deceasedFlag: boolean | null
    notes: string | null
    source: string | null
    batchId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    accountNumber: string | null
    firstName: string | null
    lastName: string | null
    fullName: string | null
    email: string | null
    address1: string | null
    address2: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    originalAmount: number | null
    currentBalance: number | null
    amountPaid: number | null
    interestRate: number | null
    lastPaymentDate: Date | null
    lastPaymentAmount: number | null
    status: string | null
    priority: string | null
    assignedAgentId: string | null
    assignedDate: Date | null
    preferredContactMethod: string | null
    bestTimeToCall: string | null
    timezone: string | null
    language: string | null
    daysPastDue: number | null
    lastContactDate: Date | null
    nextContactDate: Date | null
    contactAttempts: number | null
    doNotCall: boolean | null
    disputeFlag: boolean | null
    bankruptcyFlag: boolean | null
    deceasedFlag: boolean | null
    notes: string | null
    source: string | null
    batchId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    accountNumber: number
    firstName: number
    lastName: number
    fullName: number
    email: number
    address1: number
    address2: number
    city: number
    state: number
    zipCode: number
    country: number
    originalAmount: number
    currentBalance: number
    amountPaid: number
    interestRate: number
    lastPaymentDate: number
    lastPaymentAmount: number
    status: number
    priority: number
    assignedAgentId: number
    assignedDate: number
    preferredContactMethod: number
    bestTimeToCall: number
    timezone: number
    language: number
    daysPastDue: number
    lastContactDate: number
    nextContactDate: number
    contactAttempts: number
    doNotCall: number
    disputeFlag: number
    bankruptcyFlag: number
    deceasedFlag: number
    notes: number
    source: number
    batchId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    originalAmount?: true
    currentBalance?: true
    amountPaid?: true
    interestRate?: true
    lastPaymentAmount?: true
    daysPastDue?: true
    contactAttempts?: true
  }

  export type AccountSumAggregateInputType = {
    originalAmount?: true
    currentBalance?: true
    amountPaid?: true
    interestRate?: true
    lastPaymentAmount?: true
    daysPastDue?: true
    contactAttempts?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    accountNumber?: true
    firstName?: true
    lastName?: true
    fullName?: true
    email?: true
    address1?: true
    address2?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    originalAmount?: true
    currentBalance?: true
    amountPaid?: true
    interestRate?: true
    lastPaymentDate?: true
    lastPaymentAmount?: true
    status?: true
    priority?: true
    assignedAgentId?: true
    assignedDate?: true
    preferredContactMethod?: true
    bestTimeToCall?: true
    timezone?: true
    language?: true
    daysPastDue?: true
    lastContactDate?: true
    nextContactDate?: true
    contactAttempts?: true
    doNotCall?: true
    disputeFlag?: true
    bankruptcyFlag?: true
    deceasedFlag?: true
    notes?: true
    source?: true
    batchId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    accountNumber?: true
    firstName?: true
    lastName?: true
    fullName?: true
    email?: true
    address1?: true
    address2?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    originalAmount?: true
    currentBalance?: true
    amountPaid?: true
    interestRate?: true
    lastPaymentDate?: true
    lastPaymentAmount?: true
    status?: true
    priority?: true
    assignedAgentId?: true
    assignedDate?: true
    preferredContactMethod?: true
    bestTimeToCall?: true
    timezone?: true
    language?: true
    daysPastDue?: true
    lastContactDate?: true
    nextContactDate?: true
    contactAttempts?: true
    doNotCall?: true
    disputeFlag?: true
    bankruptcyFlag?: true
    deceasedFlag?: true
    notes?: true
    source?: true
    batchId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    accountNumber?: true
    firstName?: true
    lastName?: true
    fullName?: true
    email?: true
    address1?: true
    address2?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    originalAmount?: true
    currentBalance?: true
    amountPaid?: true
    interestRate?: true
    lastPaymentDate?: true
    lastPaymentAmount?: true
    status?: true
    priority?: true
    assignedAgentId?: true
    assignedDate?: true
    preferredContactMethod?: true
    bestTimeToCall?: true
    timezone?: true
    language?: true
    daysPastDue?: true
    lastContactDate?: true
    nextContactDate?: true
    contactAttempts?: true
    doNotCall?: true
    disputeFlag?: true
    bankruptcyFlag?: true
    deceasedFlag?: true
    notes?: true
    source?: true
    batchId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email: string | null
    address1: string | null
    address2: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    originalAmount: number
    currentBalance: number
    amountPaid: number
    interestRate: number | null
    lastPaymentDate: Date | null
    lastPaymentAmount: number | null
    status: string
    priority: string
    assignedAgentId: string | null
    assignedDate: Date | null
    preferredContactMethod: string | null
    bestTimeToCall: string | null
    timezone: string | null
    language: string | null
    daysPastDue: number
    lastContactDate: Date | null
    nextContactDate: Date | null
    contactAttempts: number
    doNotCall: boolean
    disputeFlag: boolean
    bankruptcyFlag: boolean
    deceasedFlag: boolean
    notes: string | null
    source: string | null
    batchId: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountNumber?: boolean
    firstName?: boolean
    lastName?: boolean
    fullName?: boolean
    email?: boolean
    address1?: boolean
    address2?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    originalAmount?: boolean
    currentBalance?: boolean
    amountPaid?: boolean
    interestRate?: boolean
    lastPaymentDate?: boolean
    lastPaymentAmount?: boolean
    status?: boolean
    priority?: boolean
    assignedAgentId?: boolean
    assignedDate?: boolean
    preferredContactMethod?: boolean
    bestTimeToCall?: boolean
    timezone?: boolean
    language?: boolean
    daysPastDue?: boolean
    lastContactDate?: boolean
    nextContactDate?: boolean
    contactAttempts?: boolean
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: boolean
    source?: boolean
    batchId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    actions?: boolean | Account$actionsArgs<ExtArgs>
    phoneNumbers?: boolean | Account$phoneNumbersArgs<ExtArgs>
    assignedAgent?: boolean | Account$assignedAgentArgs<ExtArgs>
    calls?: boolean | Account$callsArgs<ExtArgs>
    _count?: boolean | AccountCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountNumber?: boolean
    firstName?: boolean
    lastName?: boolean
    fullName?: boolean
    email?: boolean
    address1?: boolean
    address2?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    originalAmount?: boolean
    currentBalance?: boolean
    amountPaid?: boolean
    interestRate?: boolean
    lastPaymentDate?: boolean
    lastPaymentAmount?: boolean
    status?: boolean
    priority?: boolean
    assignedAgentId?: boolean
    assignedDate?: boolean
    preferredContactMethod?: boolean
    bestTimeToCall?: boolean
    timezone?: boolean
    language?: boolean
    daysPastDue?: boolean
    lastContactDate?: boolean
    nextContactDate?: boolean
    contactAttempts?: boolean
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: boolean
    source?: boolean
    batchId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignedAgent?: boolean | Account$assignedAgentArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    accountNumber?: boolean
    firstName?: boolean
    lastName?: boolean
    fullName?: boolean
    email?: boolean
    address1?: boolean
    address2?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    originalAmount?: boolean
    currentBalance?: boolean
    amountPaid?: boolean
    interestRate?: boolean
    lastPaymentDate?: boolean
    lastPaymentAmount?: boolean
    status?: boolean
    priority?: boolean
    assignedAgentId?: boolean
    assignedDate?: boolean
    preferredContactMethod?: boolean
    bestTimeToCall?: boolean
    timezone?: boolean
    language?: boolean
    daysPastDue?: boolean
    lastContactDate?: boolean
    nextContactDate?: boolean
    contactAttempts?: boolean
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: boolean
    source?: boolean
    batchId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actions?: boolean | Account$actionsArgs<ExtArgs>
    phoneNumbers?: boolean | Account$phoneNumbersArgs<ExtArgs>
    assignedAgent?: boolean | Account$assignedAgentArgs<ExtArgs>
    calls?: boolean | Account$callsArgs<ExtArgs>
    _count?: boolean | AccountCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedAgent?: boolean | Account$assignedAgentArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      actions: Prisma.$AccountActionPayload<ExtArgs>[]
      phoneNumbers: Prisma.$AccountPhonePayload<ExtArgs>[]
      assignedAgent: Prisma.$UserPayload<ExtArgs> | null
      calls: Prisma.$CallPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountNumber: string
      firstName: string
      lastName: string
      fullName: string
      email: string | null
      address1: string | null
      address2: string | null
      city: string | null
      state: string | null
      zipCode: string | null
      country: string | null
      originalAmount: number
      currentBalance: number
      amountPaid: number
      interestRate: number | null
      lastPaymentDate: Date | null
      lastPaymentAmount: number | null
      status: string
      priority: string
      assignedAgentId: string | null
      assignedDate: Date | null
      preferredContactMethod: string | null
      bestTimeToCall: string | null
      timezone: string | null
      language: string | null
      daysPastDue: number
      lastContactDate: Date | null
      nextContactDate: Date | null
      contactAttempts: number
      doNotCall: boolean
      disputeFlag: boolean
      bankruptcyFlag: boolean
      deceasedFlag: boolean
      notes: string | null
      source: string | null
      batchId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actions<T extends Account$actionsArgs<ExtArgs> = {}>(args?: Subset<T, Account$actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findMany"> | Null>
    phoneNumbers<T extends Account$phoneNumbersArgs<ExtArgs> = {}>(args?: Subset<T, Account$phoneNumbersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findMany"> | Null>
    assignedAgent<T extends Account$assignedAgentArgs<ExtArgs> = {}>(args?: Subset<T, Account$assignedAgentArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    calls<T extends Account$callsArgs<ExtArgs> = {}>(args?: Subset<T, Account$callsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */ 
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly accountNumber: FieldRef<"Account", 'String'>
    readonly firstName: FieldRef<"Account", 'String'>
    readonly lastName: FieldRef<"Account", 'String'>
    readonly fullName: FieldRef<"Account", 'String'>
    readonly email: FieldRef<"Account", 'String'>
    readonly address1: FieldRef<"Account", 'String'>
    readonly address2: FieldRef<"Account", 'String'>
    readonly city: FieldRef<"Account", 'String'>
    readonly state: FieldRef<"Account", 'String'>
    readonly zipCode: FieldRef<"Account", 'String'>
    readonly country: FieldRef<"Account", 'String'>
    readonly originalAmount: FieldRef<"Account", 'Float'>
    readonly currentBalance: FieldRef<"Account", 'Float'>
    readonly amountPaid: FieldRef<"Account", 'Float'>
    readonly interestRate: FieldRef<"Account", 'Float'>
    readonly lastPaymentDate: FieldRef<"Account", 'DateTime'>
    readonly lastPaymentAmount: FieldRef<"Account", 'Float'>
    readonly status: FieldRef<"Account", 'String'>
    readonly priority: FieldRef<"Account", 'String'>
    readonly assignedAgentId: FieldRef<"Account", 'String'>
    readonly assignedDate: FieldRef<"Account", 'DateTime'>
    readonly preferredContactMethod: FieldRef<"Account", 'String'>
    readonly bestTimeToCall: FieldRef<"Account", 'String'>
    readonly timezone: FieldRef<"Account", 'String'>
    readonly language: FieldRef<"Account", 'String'>
    readonly daysPastDue: FieldRef<"Account", 'Int'>
    readonly lastContactDate: FieldRef<"Account", 'DateTime'>
    readonly nextContactDate: FieldRef<"Account", 'DateTime'>
    readonly contactAttempts: FieldRef<"Account", 'Int'>
    readonly doNotCall: FieldRef<"Account", 'Boolean'>
    readonly disputeFlag: FieldRef<"Account", 'Boolean'>
    readonly bankruptcyFlag: FieldRef<"Account", 'Boolean'>
    readonly deceasedFlag: FieldRef<"Account", 'Boolean'>
    readonly notes: FieldRef<"Account", 'String'>
    readonly source: FieldRef<"Account", 'String'>
    readonly batchId: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
  }

  /**
   * Account.actions
   */
  export type Account$actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    where?: AccountActionWhereInput
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    cursor?: AccountActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountActionScalarFieldEnum | AccountActionScalarFieldEnum[]
  }

  /**
   * Account.phoneNumbers
   */
  export type Account$phoneNumbersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    where?: AccountPhoneWhereInput
    orderBy?: AccountPhoneOrderByWithRelationInput | AccountPhoneOrderByWithRelationInput[]
    cursor?: AccountPhoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountPhoneScalarFieldEnum | AccountPhoneScalarFieldEnum[]
  }

  /**
   * Account.assignedAgent
   */
  export type Account$assignedAgentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Account.calls
   */
  export type Account$callsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    where?: CallWhereInput
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    cursor?: CallWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model AccountPhone
   */

  export type AggregateAccountPhone = {
    _count: AccountPhoneCountAggregateOutputType | null
    _min: AccountPhoneMinAggregateOutputType | null
    _max: AccountPhoneMaxAggregateOutputType | null
  }

  export type AccountPhoneMinAggregateOutputType = {
    id: string | null
    accountId: string | null
    phoneNumber: string | null
    phoneType: string | null
    isValid: boolean | null
    doNotCall: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountPhoneMaxAggregateOutputType = {
    id: string | null
    accountId: string | null
    phoneNumber: string | null
    phoneType: string | null
    isValid: boolean | null
    doNotCall: boolean | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountPhoneCountAggregateOutputType = {
    id: number
    accountId: number
    phoneNumber: number
    phoneType: number
    isValid: number
    doNotCall: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountPhoneMinAggregateInputType = {
    id?: true
    accountId?: true
    phoneNumber?: true
    phoneType?: true
    isValid?: true
    doNotCall?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountPhoneMaxAggregateInputType = {
    id?: true
    accountId?: true
    phoneNumber?: true
    phoneType?: true
    isValid?: true
    doNotCall?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountPhoneCountAggregateInputType = {
    id?: true
    accountId?: true
    phoneNumber?: true
    phoneType?: true
    isValid?: true
    doNotCall?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountPhoneAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountPhone to aggregate.
     */
    where?: AccountPhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountPhones to fetch.
     */
    orderBy?: AccountPhoneOrderByWithRelationInput | AccountPhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountPhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountPhones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountPhones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AccountPhones
    **/
    _count?: true | AccountPhoneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountPhoneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountPhoneMaxAggregateInputType
  }

  export type GetAccountPhoneAggregateType<T extends AccountPhoneAggregateArgs> = {
        [P in keyof T & keyof AggregateAccountPhone]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccountPhone[P]>
      : GetScalarType<T[P], AggregateAccountPhone[P]>
  }




  export type AccountPhoneGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountPhoneWhereInput
    orderBy?: AccountPhoneOrderByWithAggregationInput | AccountPhoneOrderByWithAggregationInput[]
    by: AccountPhoneScalarFieldEnum[] | AccountPhoneScalarFieldEnum
    having?: AccountPhoneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountPhoneCountAggregateInputType | true
    _min?: AccountPhoneMinAggregateInputType
    _max?: AccountPhoneMaxAggregateInputType
  }

  export type AccountPhoneGroupByOutputType = {
    id: string
    accountId: string
    phoneNumber: string
    phoneType: string
    isValid: boolean
    doNotCall: boolean
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountPhoneCountAggregateOutputType | null
    _min: AccountPhoneMinAggregateOutputType | null
    _max: AccountPhoneMaxAggregateOutputType | null
  }

  type GetAccountPhoneGroupByPayload<T extends AccountPhoneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountPhoneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountPhoneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountPhoneGroupByOutputType[P]>
            : GetScalarType<T[P], AccountPhoneGroupByOutputType[P]>
        }
      >
    >


  export type AccountPhoneSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    phoneNumber?: boolean
    phoneType?: boolean
    isValid?: boolean
    doNotCall?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean | AccountDefaultArgs<ExtArgs>
    calls?: boolean | AccountPhone$callsArgs<ExtArgs>
    _count?: boolean | AccountPhoneCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountPhone"]>

  export type AccountPhoneSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    phoneNumber?: boolean
    phoneType?: boolean
    isValid?: boolean
    doNotCall?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountPhone"]>

  export type AccountPhoneSelectScalar = {
    id?: boolean
    accountId?: boolean
    phoneNumber?: boolean
    phoneType?: boolean
    isValid?: boolean
    doNotCall?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountPhoneInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account?: boolean | AccountDefaultArgs<ExtArgs>
    calls?: boolean | AccountPhone$callsArgs<ExtArgs>
    _count?: boolean | AccountPhoneCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AccountPhoneIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }

  export type $AccountPhonePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AccountPhone"
    objects: {
      account: Prisma.$AccountPayload<ExtArgs>
      calls: Prisma.$CallPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountId: string
      phoneNumber: string
      phoneType: string
      isValid: boolean
      doNotCall: boolean
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["accountPhone"]>
    composites: {}
  }

  type AccountPhoneGetPayload<S extends boolean | null | undefined | AccountPhoneDefaultArgs> = $Result.GetResult<Prisma.$AccountPhonePayload, S>

  type AccountPhoneCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AccountPhoneFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AccountPhoneCountAggregateInputType | true
    }

  export interface AccountPhoneDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccountPhone'], meta: { name: 'AccountPhone' } }
    /**
     * Find zero or one AccountPhone that matches the filter.
     * @param {AccountPhoneFindUniqueArgs} args - Arguments to find a AccountPhone
     * @example
     * // Get one AccountPhone
     * const accountPhone = await prisma.accountPhone.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountPhoneFindUniqueArgs>(args: SelectSubset<T, AccountPhoneFindUniqueArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AccountPhone that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AccountPhoneFindUniqueOrThrowArgs} args - Arguments to find a AccountPhone
     * @example
     * // Get one AccountPhone
     * const accountPhone = await prisma.accountPhone.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountPhoneFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountPhoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AccountPhone that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneFindFirstArgs} args - Arguments to find a AccountPhone
     * @example
     * // Get one AccountPhone
     * const accountPhone = await prisma.accountPhone.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountPhoneFindFirstArgs>(args?: SelectSubset<T, AccountPhoneFindFirstArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AccountPhone that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneFindFirstOrThrowArgs} args - Arguments to find a AccountPhone
     * @example
     * // Get one AccountPhone
     * const accountPhone = await prisma.accountPhone.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountPhoneFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountPhoneFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AccountPhones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AccountPhones
     * const accountPhones = await prisma.accountPhone.findMany()
     * 
     * // Get first 10 AccountPhones
     * const accountPhones = await prisma.accountPhone.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountPhoneWithIdOnly = await prisma.accountPhone.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountPhoneFindManyArgs>(args?: SelectSubset<T, AccountPhoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AccountPhone.
     * @param {AccountPhoneCreateArgs} args - Arguments to create a AccountPhone.
     * @example
     * // Create one AccountPhone
     * const AccountPhone = await prisma.accountPhone.create({
     *   data: {
     *     // ... data to create a AccountPhone
     *   }
     * })
     * 
     */
    create<T extends AccountPhoneCreateArgs>(args: SelectSubset<T, AccountPhoneCreateArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AccountPhones.
     * @param {AccountPhoneCreateManyArgs} args - Arguments to create many AccountPhones.
     * @example
     * // Create many AccountPhones
     * const accountPhone = await prisma.accountPhone.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountPhoneCreateManyArgs>(args?: SelectSubset<T, AccountPhoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AccountPhones and returns the data saved in the database.
     * @param {AccountPhoneCreateManyAndReturnArgs} args - Arguments to create many AccountPhones.
     * @example
     * // Create many AccountPhones
     * const accountPhone = await prisma.accountPhone.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AccountPhones and only return the `id`
     * const accountPhoneWithIdOnly = await prisma.accountPhone.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountPhoneCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountPhoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AccountPhone.
     * @param {AccountPhoneDeleteArgs} args - Arguments to delete one AccountPhone.
     * @example
     * // Delete one AccountPhone
     * const AccountPhone = await prisma.accountPhone.delete({
     *   where: {
     *     // ... filter to delete one AccountPhone
     *   }
     * })
     * 
     */
    delete<T extends AccountPhoneDeleteArgs>(args: SelectSubset<T, AccountPhoneDeleteArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AccountPhone.
     * @param {AccountPhoneUpdateArgs} args - Arguments to update one AccountPhone.
     * @example
     * // Update one AccountPhone
     * const accountPhone = await prisma.accountPhone.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountPhoneUpdateArgs>(args: SelectSubset<T, AccountPhoneUpdateArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AccountPhones.
     * @param {AccountPhoneDeleteManyArgs} args - Arguments to filter AccountPhones to delete.
     * @example
     * // Delete a few AccountPhones
     * const { count } = await prisma.accountPhone.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountPhoneDeleteManyArgs>(args?: SelectSubset<T, AccountPhoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccountPhones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AccountPhones
     * const accountPhone = await prisma.accountPhone.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountPhoneUpdateManyArgs>(args: SelectSubset<T, AccountPhoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AccountPhone.
     * @param {AccountPhoneUpsertArgs} args - Arguments to update or create a AccountPhone.
     * @example
     * // Update or create a AccountPhone
     * const accountPhone = await prisma.accountPhone.upsert({
     *   create: {
     *     // ... data to create a AccountPhone
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AccountPhone we want to update
     *   }
     * })
     */
    upsert<T extends AccountPhoneUpsertArgs>(args: SelectSubset<T, AccountPhoneUpsertArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AccountPhones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneCountArgs} args - Arguments to filter AccountPhones to count.
     * @example
     * // Count the number of AccountPhones
     * const count = await prisma.accountPhone.count({
     *   where: {
     *     // ... the filter for the AccountPhones we want to count
     *   }
     * })
    **/
    count<T extends AccountPhoneCountArgs>(
      args?: Subset<T, AccountPhoneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountPhoneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AccountPhone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountPhoneAggregateArgs>(args: Subset<T, AccountPhoneAggregateArgs>): Prisma.PrismaPromise<GetAccountPhoneAggregateType<T>>

    /**
     * Group by AccountPhone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountPhoneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountPhoneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountPhoneGroupByArgs['orderBy'] }
        : { orderBy?: AccountPhoneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountPhoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountPhoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AccountPhone model
   */
  readonly fields: AccountPhoneFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AccountPhone.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountPhoneClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    account<T extends AccountDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AccountDefaultArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    calls<T extends AccountPhone$callsArgs<ExtArgs> = {}>(args?: Subset<T, AccountPhone$callsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AccountPhone model
   */ 
  interface AccountPhoneFieldRefs {
    readonly id: FieldRef<"AccountPhone", 'String'>
    readonly accountId: FieldRef<"AccountPhone", 'String'>
    readonly phoneNumber: FieldRef<"AccountPhone", 'String'>
    readonly phoneType: FieldRef<"AccountPhone", 'String'>
    readonly isValid: FieldRef<"AccountPhone", 'Boolean'>
    readonly doNotCall: FieldRef<"AccountPhone", 'Boolean'>
    readonly notes: FieldRef<"AccountPhone", 'String'>
    readonly createdAt: FieldRef<"AccountPhone", 'DateTime'>
    readonly updatedAt: FieldRef<"AccountPhone", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AccountPhone findUnique
   */
  export type AccountPhoneFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter, which AccountPhone to fetch.
     */
    where: AccountPhoneWhereUniqueInput
  }

  /**
   * AccountPhone findUniqueOrThrow
   */
  export type AccountPhoneFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter, which AccountPhone to fetch.
     */
    where: AccountPhoneWhereUniqueInput
  }

  /**
   * AccountPhone findFirst
   */
  export type AccountPhoneFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter, which AccountPhone to fetch.
     */
    where?: AccountPhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountPhones to fetch.
     */
    orderBy?: AccountPhoneOrderByWithRelationInput | AccountPhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountPhones.
     */
    cursor?: AccountPhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountPhones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountPhones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountPhones.
     */
    distinct?: AccountPhoneScalarFieldEnum | AccountPhoneScalarFieldEnum[]
  }

  /**
   * AccountPhone findFirstOrThrow
   */
  export type AccountPhoneFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter, which AccountPhone to fetch.
     */
    where?: AccountPhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountPhones to fetch.
     */
    orderBy?: AccountPhoneOrderByWithRelationInput | AccountPhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountPhones.
     */
    cursor?: AccountPhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountPhones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountPhones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountPhones.
     */
    distinct?: AccountPhoneScalarFieldEnum | AccountPhoneScalarFieldEnum[]
  }

  /**
   * AccountPhone findMany
   */
  export type AccountPhoneFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter, which AccountPhones to fetch.
     */
    where?: AccountPhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountPhones to fetch.
     */
    orderBy?: AccountPhoneOrderByWithRelationInput | AccountPhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AccountPhones.
     */
    cursor?: AccountPhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountPhones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountPhones.
     */
    skip?: number
    distinct?: AccountPhoneScalarFieldEnum | AccountPhoneScalarFieldEnum[]
  }

  /**
   * AccountPhone create
   */
  export type AccountPhoneCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * The data needed to create a AccountPhone.
     */
    data: XOR<AccountPhoneCreateInput, AccountPhoneUncheckedCreateInput>
  }

  /**
   * AccountPhone createMany
   */
  export type AccountPhoneCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AccountPhones.
     */
    data: AccountPhoneCreateManyInput | AccountPhoneCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AccountPhone createManyAndReturn
   */
  export type AccountPhoneCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AccountPhones.
     */
    data: AccountPhoneCreateManyInput | AccountPhoneCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccountPhone update
   */
  export type AccountPhoneUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * The data needed to update a AccountPhone.
     */
    data: XOR<AccountPhoneUpdateInput, AccountPhoneUncheckedUpdateInput>
    /**
     * Choose, which AccountPhone to update.
     */
    where: AccountPhoneWhereUniqueInput
  }

  /**
   * AccountPhone updateMany
   */
  export type AccountPhoneUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AccountPhones.
     */
    data: XOR<AccountPhoneUpdateManyMutationInput, AccountPhoneUncheckedUpdateManyInput>
    /**
     * Filter which AccountPhones to update
     */
    where?: AccountPhoneWhereInput
  }

  /**
   * AccountPhone upsert
   */
  export type AccountPhoneUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * The filter to search for the AccountPhone to update in case it exists.
     */
    where: AccountPhoneWhereUniqueInput
    /**
     * In case the AccountPhone found by the `where` argument doesn't exist, create a new AccountPhone with this data.
     */
    create: XOR<AccountPhoneCreateInput, AccountPhoneUncheckedCreateInput>
    /**
     * In case the AccountPhone was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountPhoneUpdateInput, AccountPhoneUncheckedUpdateInput>
  }

  /**
   * AccountPhone delete
   */
  export type AccountPhoneDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    /**
     * Filter which AccountPhone to delete.
     */
    where: AccountPhoneWhereUniqueInput
  }

  /**
   * AccountPhone deleteMany
   */
  export type AccountPhoneDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountPhones to delete
     */
    where?: AccountPhoneWhereInput
  }

  /**
   * AccountPhone.calls
   */
  export type AccountPhone$callsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    where?: CallWhereInput
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    cursor?: CallWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * AccountPhone without action
   */
  export type AccountPhoneDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
  }


  /**
   * Model Call
   */

  export type AggregateCall = {
    _count: CallCountAggregateOutputType | null
    _avg: CallAvgAggregateOutputType | null
    _sum: CallSumAggregateOutputType | null
    _min: CallMinAggregateOutputType | null
    _max: CallMaxAggregateOutputType | null
  }

  export type CallAvgAggregateOutputType = {
    duration: number | null
    amountPromised: number | null
    amountCollected: number | null
  }

  export type CallSumAggregateOutputType = {
    duration: number | null
    amountPromised: number | null
    amountCollected: number | null
  }

  export type CallMinAggregateOutputType = {
    id: string | null
    accountId: string | null
    accountPhoneId: string | null
    agentId: string | null
    direction: string | null
    startTime: Date | null
    endTime: Date | null
    duration: number | null
    status: string | null
    disposition: string | null
    notes: string | null
    followUpDate: Date | null
    amountPromised: number | null
    amountCollected: number | null
    recordingPath: string | null
    callerId: string | null
    campaignId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CallMaxAggregateOutputType = {
    id: string | null
    accountId: string | null
    accountPhoneId: string | null
    agentId: string | null
    direction: string | null
    startTime: Date | null
    endTime: Date | null
    duration: number | null
    status: string | null
    disposition: string | null
    notes: string | null
    followUpDate: Date | null
    amountPromised: number | null
    amountCollected: number | null
    recordingPath: string | null
    callerId: string | null
    campaignId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CallCountAggregateOutputType = {
    id: number
    accountId: number
    accountPhoneId: number
    agentId: number
    direction: number
    startTime: number
    endTime: number
    duration: number
    status: number
    disposition: number
    notes: number
    followUpDate: number
    amountPromised: number
    amountCollected: number
    recordingPath: number
    callerId: number
    campaignId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CallAvgAggregateInputType = {
    duration?: true
    amountPromised?: true
    amountCollected?: true
  }

  export type CallSumAggregateInputType = {
    duration?: true
    amountPromised?: true
    amountCollected?: true
  }

  export type CallMinAggregateInputType = {
    id?: true
    accountId?: true
    accountPhoneId?: true
    agentId?: true
    direction?: true
    startTime?: true
    endTime?: true
    duration?: true
    status?: true
    disposition?: true
    notes?: true
    followUpDate?: true
    amountPromised?: true
    amountCollected?: true
    recordingPath?: true
    callerId?: true
    campaignId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CallMaxAggregateInputType = {
    id?: true
    accountId?: true
    accountPhoneId?: true
    agentId?: true
    direction?: true
    startTime?: true
    endTime?: true
    duration?: true
    status?: true
    disposition?: true
    notes?: true
    followUpDate?: true
    amountPromised?: true
    amountCollected?: true
    recordingPath?: true
    callerId?: true
    campaignId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CallCountAggregateInputType = {
    id?: true
    accountId?: true
    accountPhoneId?: true
    agentId?: true
    direction?: true
    startTime?: true
    endTime?: true
    duration?: true
    status?: true
    disposition?: true
    notes?: true
    followUpDate?: true
    amountPromised?: true
    amountCollected?: true
    recordingPath?: true
    callerId?: true
    campaignId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CallAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Call to aggregate.
     */
    where?: CallWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calls to fetch.
     */
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CallWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Calls
    **/
    _count?: true | CallCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CallAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CallSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CallMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CallMaxAggregateInputType
  }

  export type GetCallAggregateType<T extends CallAggregateArgs> = {
        [P in keyof T & keyof AggregateCall]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCall[P]>
      : GetScalarType<T[P], AggregateCall[P]>
  }




  export type CallGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CallWhereInput
    orderBy?: CallOrderByWithAggregationInput | CallOrderByWithAggregationInput[]
    by: CallScalarFieldEnum[] | CallScalarFieldEnum
    having?: CallScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CallCountAggregateInputType | true
    _avg?: CallAvgAggregateInputType
    _sum?: CallSumAggregateInputType
    _min?: CallMinAggregateInputType
    _max?: CallMaxAggregateInputType
  }

  export type CallGroupByOutputType = {
    id: string
    accountId: string
    accountPhoneId: string | null
    agentId: string
    direction: string
    startTime: Date
    endTime: Date | null
    duration: number | null
    status: string
    disposition: string | null
    notes: string | null
    followUpDate: Date | null
    amountPromised: number | null
    amountCollected: number | null
    recordingPath: string | null
    callerId: string | null
    campaignId: string | null
    createdAt: Date
    updatedAt: Date
    _count: CallCountAggregateOutputType | null
    _avg: CallAvgAggregateOutputType | null
    _sum: CallSumAggregateOutputType | null
    _min: CallMinAggregateOutputType | null
    _max: CallMaxAggregateOutputType | null
  }

  type GetCallGroupByPayload<T extends CallGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CallGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CallGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CallGroupByOutputType[P]>
            : GetScalarType<T[P], CallGroupByOutputType[P]>
        }
      >
    >


  export type CallSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    accountPhoneId?: boolean
    agentId?: boolean
    direction?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    status?: boolean
    disposition?: boolean
    notes?: boolean
    followUpDate?: boolean
    amountPromised?: boolean
    amountCollected?: boolean
    recordingPath?: boolean
    callerId?: boolean
    campaignId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agent?: boolean | UserDefaultArgs<ExtArgs>
    accountPhone?: boolean | Call$accountPhoneArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["call"]>

  export type CallSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    accountPhoneId?: boolean
    agentId?: boolean
    direction?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    status?: boolean
    disposition?: boolean
    notes?: boolean
    followUpDate?: boolean
    amountPromised?: boolean
    amountCollected?: boolean
    recordingPath?: boolean
    callerId?: boolean
    campaignId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agent?: boolean | UserDefaultArgs<ExtArgs>
    accountPhone?: boolean | Call$accountPhoneArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["call"]>

  export type CallSelectScalar = {
    id?: boolean
    accountId?: boolean
    accountPhoneId?: boolean
    agentId?: boolean
    direction?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    status?: boolean
    disposition?: boolean
    notes?: boolean
    followUpDate?: boolean
    amountPromised?: boolean
    amountCollected?: boolean
    recordingPath?: boolean
    callerId?: boolean
    campaignId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CallInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | UserDefaultArgs<ExtArgs>
    accountPhone?: boolean | Call$accountPhoneArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }
  export type CallIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | UserDefaultArgs<ExtArgs>
    accountPhone?: boolean | Call$accountPhoneArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }

  export type $CallPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Call"
    objects: {
      agent: Prisma.$UserPayload<ExtArgs>
      accountPhone: Prisma.$AccountPhonePayload<ExtArgs> | null
      account: Prisma.$AccountPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountId: string
      accountPhoneId: string | null
      agentId: string
      direction: string
      startTime: Date
      endTime: Date | null
      duration: number | null
      status: string
      disposition: string | null
      notes: string | null
      followUpDate: Date | null
      amountPromised: number | null
      amountCollected: number | null
      recordingPath: string | null
      callerId: string | null
      campaignId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["call"]>
    composites: {}
  }

  type CallGetPayload<S extends boolean | null | undefined | CallDefaultArgs> = $Result.GetResult<Prisma.$CallPayload, S>

  type CallCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CallFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CallCountAggregateInputType | true
    }

  export interface CallDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Call'], meta: { name: 'Call' } }
    /**
     * Find zero or one Call that matches the filter.
     * @param {CallFindUniqueArgs} args - Arguments to find a Call
     * @example
     * // Get one Call
     * const call = await prisma.call.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CallFindUniqueArgs>(args: SelectSubset<T, CallFindUniqueArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Call that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CallFindUniqueOrThrowArgs} args - Arguments to find a Call
     * @example
     * // Get one Call
     * const call = await prisma.call.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CallFindUniqueOrThrowArgs>(args: SelectSubset<T, CallFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Call that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallFindFirstArgs} args - Arguments to find a Call
     * @example
     * // Get one Call
     * const call = await prisma.call.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CallFindFirstArgs>(args?: SelectSubset<T, CallFindFirstArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Call that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallFindFirstOrThrowArgs} args - Arguments to find a Call
     * @example
     * // Get one Call
     * const call = await prisma.call.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CallFindFirstOrThrowArgs>(args?: SelectSubset<T, CallFindFirstOrThrowArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Calls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Calls
     * const calls = await prisma.call.findMany()
     * 
     * // Get first 10 Calls
     * const calls = await prisma.call.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const callWithIdOnly = await prisma.call.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CallFindManyArgs>(args?: SelectSubset<T, CallFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Call.
     * @param {CallCreateArgs} args - Arguments to create a Call.
     * @example
     * // Create one Call
     * const Call = await prisma.call.create({
     *   data: {
     *     // ... data to create a Call
     *   }
     * })
     * 
     */
    create<T extends CallCreateArgs>(args: SelectSubset<T, CallCreateArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Calls.
     * @param {CallCreateManyArgs} args - Arguments to create many Calls.
     * @example
     * // Create many Calls
     * const call = await prisma.call.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CallCreateManyArgs>(args?: SelectSubset<T, CallCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Calls and returns the data saved in the database.
     * @param {CallCreateManyAndReturnArgs} args - Arguments to create many Calls.
     * @example
     * // Create many Calls
     * const call = await prisma.call.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Calls and only return the `id`
     * const callWithIdOnly = await prisma.call.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CallCreateManyAndReturnArgs>(args?: SelectSubset<T, CallCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Call.
     * @param {CallDeleteArgs} args - Arguments to delete one Call.
     * @example
     * // Delete one Call
     * const Call = await prisma.call.delete({
     *   where: {
     *     // ... filter to delete one Call
     *   }
     * })
     * 
     */
    delete<T extends CallDeleteArgs>(args: SelectSubset<T, CallDeleteArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Call.
     * @param {CallUpdateArgs} args - Arguments to update one Call.
     * @example
     * // Update one Call
     * const call = await prisma.call.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CallUpdateArgs>(args: SelectSubset<T, CallUpdateArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Calls.
     * @param {CallDeleteManyArgs} args - Arguments to filter Calls to delete.
     * @example
     * // Delete a few Calls
     * const { count } = await prisma.call.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CallDeleteManyArgs>(args?: SelectSubset<T, CallDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Calls
     * const call = await prisma.call.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CallUpdateManyArgs>(args: SelectSubset<T, CallUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Call.
     * @param {CallUpsertArgs} args - Arguments to update or create a Call.
     * @example
     * // Update or create a Call
     * const call = await prisma.call.upsert({
     *   create: {
     *     // ... data to create a Call
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Call we want to update
     *   }
     * })
     */
    upsert<T extends CallUpsertArgs>(args: SelectSubset<T, CallUpsertArgs<ExtArgs>>): Prisma__CallClient<$Result.GetResult<Prisma.$CallPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Calls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallCountArgs} args - Arguments to filter Calls to count.
     * @example
     * // Count the number of Calls
     * const count = await prisma.call.count({
     *   where: {
     *     // ... the filter for the Calls we want to count
     *   }
     * })
    **/
    count<T extends CallCountArgs>(
      args?: Subset<T, CallCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CallCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Call.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CallAggregateArgs>(args: Subset<T, CallAggregateArgs>): Prisma.PrismaPromise<GetCallAggregateType<T>>

    /**
     * Group by Call.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CallGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CallGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CallGroupByArgs['orderBy'] }
        : { orderBy?: CallGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CallGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCallGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Call model
   */
  readonly fields: CallFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Call.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CallClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agent<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    accountPhone<T extends Call$accountPhoneArgs<ExtArgs> = {}>(args?: Subset<T, Call$accountPhoneArgs<ExtArgs>>): Prisma__AccountPhoneClient<$Result.GetResult<Prisma.$AccountPhonePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    account<T extends AccountDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AccountDefaultArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Call model
   */ 
  interface CallFieldRefs {
    readonly id: FieldRef<"Call", 'String'>
    readonly accountId: FieldRef<"Call", 'String'>
    readonly accountPhoneId: FieldRef<"Call", 'String'>
    readonly agentId: FieldRef<"Call", 'String'>
    readonly direction: FieldRef<"Call", 'String'>
    readonly startTime: FieldRef<"Call", 'DateTime'>
    readonly endTime: FieldRef<"Call", 'DateTime'>
    readonly duration: FieldRef<"Call", 'Int'>
    readonly status: FieldRef<"Call", 'String'>
    readonly disposition: FieldRef<"Call", 'String'>
    readonly notes: FieldRef<"Call", 'String'>
    readonly followUpDate: FieldRef<"Call", 'DateTime'>
    readonly amountPromised: FieldRef<"Call", 'Float'>
    readonly amountCollected: FieldRef<"Call", 'Float'>
    readonly recordingPath: FieldRef<"Call", 'String'>
    readonly callerId: FieldRef<"Call", 'String'>
    readonly campaignId: FieldRef<"Call", 'String'>
    readonly createdAt: FieldRef<"Call", 'DateTime'>
    readonly updatedAt: FieldRef<"Call", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Call findUnique
   */
  export type CallFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter, which Call to fetch.
     */
    where: CallWhereUniqueInput
  }

  /**
   * Call findUniqueOrThrow
   */
  export type CallFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter, which Call to fetch.
     */
    where: CallWhereUniqueInput
  }

  /**
   * Call findFirst
   */
  export type CallFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter, which Call to fetch.
     */
    where?: CallWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calls to fetch.
     */
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calls.
     */
    cursor?: CallWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calls.
     */
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * Call findFirstOrThrow
   */
  export type CallFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter, which Call to fetch.
     */
    where?: CallWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calls to fetch.
     */
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calls.
     */
    cursor?: CallWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calls.
     */
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * Call findMany
   */
  export type CallFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter, which Calls to fetch.
     */
    where?: CallWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calls to fetch.
     */
    orderBy?: CallOrderByWithRelationInput | CallOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Calls.
     */
    cursor?: CallWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calls.
     */
    skip?: number
    distinct?: CallScalarFieldEnum | CallScalarFieldEnum[]
  }

  /**
   * Call create
   */
  export type CallCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * The data needed to create a Call.
     */
    data: XOR<CallCreateInput, CallUncheckedCreateInput>
  }

  /**
   * Call createMany
   */
  export type CallCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Calls.
     */
    data: CallCreateManyInput | CallCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Call createManyAndReturn
   */
  export type CallCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Calls.
     */
    data: CallCreateManyInput | CallCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Call update
   */
  export type CallUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * The data needed to update a Call.
     */
    data: XOR<CallUpdateInput, CallUncheckedUpdateInput>
    /**
     * Choose, which Call to update.
     */
    where: CallWhereUniqueInput
  }

  /**
   * Call updateMany
   */
  export type CallUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Calls.
     */
    data: XOR<CallUpdateManyMutationInput, CallUncheckedUpdateManyInput>
    /**
     * Filter which Calls to update
     */
    where?: CallWhereInput
  }

  /**
   * Call upsert
   */
  export type CallUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * The filter to search for the Call to update in case it exists.
     */
    where: CallWhereUniqueInput
    /**
     * In case the Call found by the `where` argument doesn't exist, create a new Call with this data.
     */
    create: XOR<CallCreateInput, CallUncheckedCreateInput>
    /**
     * In case the Call was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CallUpdateInput, CallUncheckedUpdateInput>
  }

  /**
   * Call delete
   */
  export type CallDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
    /**
     * Filter which Call to delete.
     */
    where: CallWhereUniqueInput
  }

  /**
   * Call deleteMany
   */
  export type CallDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calls to delete
     */
    where?: CallWhereInput
  }

  /**
   * Call.accountPhone
   */
  export type Call$accountPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountPhone
     */
    select?: AccountPhoneSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountPhoneInclude<ExtArgs> | null
    where?: AccountPhoneWhereInput
  }

  /**
   * Call without action
   */
  export type CallDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Call
     */
    select?: CallSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CallInclude<ExtArgs> | null
  }


  /**
   * Model AccountAction
   */

  export type AggregateAccountAction = {
    _count: AccountActionCountAggregateOutputType | null
    _min: AccountActionMinAggregateOutputType | null
    _max: AccountActionMaxAggregateOutputType | null
  }

  export type AccountActionMinAggregateOutputType = {
    id: string | null
    accountId: string | null
    agentId: string | null
    actionType: string | null
    description: string | null
    details: string | null
    createdAt: Date | null
  }

  export type AccountActionMaxAggregateOutputType = {
    id: string | null
    accountId: string | null
    agentId: string | null
    actionType: string | null
    description: string | null
    details: string | null
    createdAt: Date | null
  }

  export type AccountActionCountAggregateOutputType = {
    id: number
    accountId: number
    agentId: number
    actionType: number
    description: number
    details: number
    createdAt: number
    _all: number
  }


  export type AccountActionMinAggregateInputType = {
    id?: true
    accountId?: true
    agentId?: true
    actionType?: true
    description?: true
    details?: true
    createdAt?: true
  }

  export type AccountActionMaxAggregateInputType = {
    id?: true
    accountId?: true
    agentId?: true
    actionType?: true
    description?: true
    details?: true
    createdAt?: true
  }

  export type AccountActionCountAggregateInputType = {
    id?: true
    accountId?: true
    agentId?: true
    actionType?: true
    description?: true
    details?: true
    createdAt?: true
    _all?: true
  }

  export type AccountActionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountAction to aggregate.
     */
    where?: AccountActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountActions to fetch.
     */
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AccountActions
    **/
    _count?: true | AccountActionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountActionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountActionMaxAggregateInputType
  }

  export type GetAccountActionAggregateType<T extends AccountActionAggregateArgs> = {
        [P in keyof T & keyof AggregateAccountAction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccountAction[P]>
      : GetScalarType<T[P], AggregateAccountAction[P]>
  }




  export type AccountActionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountActionWhereInput
    orderBy?: AccountActionOrderByWithAggregationInput | AccountActionOrderByWithAggregationInput[]
    by: AccountActionScalarFieldEnum[] | AccountActionScalarFieldEnum
    having?: AccountActionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountActionCountAggregateInputType | true
    _min?: AccountActionMinAggregateInputType
    _max?: AccountActionMaxAggregateInputType
  }

  export type AccountActionGroupByOutputType = {
    id: string
    accountId: string
    agentId: string
    actionType: string
    description: string
    details: string | null
    createdAt: Date
    _count: AccountActionCountAggregateOutputType | null
    _min: AccountActionMinAggregateOutputType | null
    _max: AccountActionMaxAggregateOutputType | null
  }

  type GetAccountActionGroupByPayload<T extends AccountActionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountActionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountActionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountActionGroupByOutputType[P]>
            : GetScalarType<T[P], AccountActionGroupByOutputType[P]>
        }
      >
    >


  export type AccountActionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    agentId?: boolean
    actionType?: boolean
    description?: boolean
    details?: boolean
    createdAt?: boolean
    agent?: boolean | UserDefaultArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountAction"]>

  export type AccountActionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    agentId?: boolean
    actionType?: boolean
    description?: boolean
    details?: boolean
    createdAt?: boolean
    agent?: boolean | UserDefaultArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountAction"]>

  export type AccountActionSelectScalar = {
    id?: boolean
    accountId?: boolean
    agentId?: boolean
    actionType?: boolean
    description?: boolean
    details?: boolean
    createdAt?: boolean
  }

  export type AccountActionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | UserDefaultArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }
  export type AccountActionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | UserDefaultArgs<ExtArgs>
    account?: boolean | AccountDefaultArgs<ExtArgs>
  }

  export type $AccountActionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AccountAction"
    objects: {
      agent: Prisma.$UserPayload<ExtArgs>
      account: Prisma.$AccountPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountId: string
      agentId: string
      actionType: string
      description: string
      details: string | null
      createdAt: Date
    }, ExtArgs["result"]["accountAction"]>
    composites: {}
  }

  type AccountActionGetPayload<S extends boolean | null | undefined | AccountActionDefaultArgs> = $Result.GetResult<Prisma.$AccountActionPayload, S>

  type AccountActionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AccountActionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AccountActionCountAggregateInputType | true
    }

  export interface AccountActionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccountAction'], meta: { name: 'AccountAction' } }
    /**
     * Find zero or one AccountAction that matches the filter.
     * @param {AccountActionFindUniqueArgs} args - Arguments to find a AccountAction
     * @example
     * // Get one AccountAction
     * const accountAction = await prisma.accountAction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountActionFindUniqueArgs>(args: SelectSubset<T, AccountActionFindUniqueArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AccountAction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AccountActionFindUniqueOrThrowArgs} args - Arguments to find a AccountAction
     * @example
     * // Get one AccountAction
     * const accountAction = await prisma.accountAction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountActionFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountActionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AccountAction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionFindFirstArgs} args - Arguments to find a AccountAction
     * @example
     * // Get one AccountAction
     * const accountAction = await prisma.accountAction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountActionFindFirstArgs>(args?: SelectSubset<T, AccountActionFindFirstArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AccountAction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionFindFirstOrThrowArgs} args - Arguments to find a AccountAction
     * @example
     * // Get one AccountAction
     * const accountAction = await prisma.accountAction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountActionFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountActionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AccountActions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AccountActions
     * const accountActions = await prisma.accountAction.findMany()
     * 
     * // Get first 10 AccountActions
     * const accountActions = await prisma.accountAction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountActionWithIdOnly = await prisma.accountAction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountActionFindManyArgs>(args?: SelectSubset<T, AccountActionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AccountAction.
     * @param {AccountActionCreateArgs} args - Arguments to create a AccountAction.
     * @example
     * // Create one AccountAction
     * const AccountAction = await prisma.accountAction.create({
     *   data: {
     *     // ... data to create a AccountAction
     *   }
     * })
     * 
     */
    create<T extends AccountActionCreateArgs>(args: SelectSubset<T, AccountActionCreateArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AccountActions.
     * @param {AccountActionCreateManyArgs} args - Arguments to create many AccountActions.
     * @example
     * // Create many AccountActions
     * const accountAction = await prisma.accountAction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountActionCreateManyArgs>(args?: SelectSubset<T, AccountActionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AccountActions and returns the data saved in the database.
     * @param {AccountActionCreateManyAndReturnArgs} args - Arguments to create many AccountActions.
     * @example
     * // Create many AccountActions
     * const accountAction = await prisma.accountAction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AccountActions and only return the `id`
     * const accountActionWithIdOnly = await prisma.accountAction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountActionCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountActionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AccountAction.
     * @param {AccountActionDeleteArgs} args - Arguments to delete one AccountAction.
     * @example
     * // Delete one AccountAction
     * const AccountAction = await prisma.accountAction.delete({
     *   where: {
     *     // ... filter to delete one AccountAction
     *   }
     * })
     * 
     */
    delete<T extends AccountActionDeleteArgs>(args: SelectSubset<T, AccountActionDeleteArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AccountAction.
     * @param {AccountActionUpdateArgs} args - Arguments to update one AccountAction.
     * @example
     * // Update one AccountAction
     * const accountAction = await prisma.accountAction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountActionUpdateArgs>(args: SelectSubset<T, AccountActionUpdateArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AccountActions.
     * @param {AccountActionDeleteManyArgs} args - Arguments to filter AccountActions to delete.
     * @example
     * // Delete a few AccountActions
     * const { count } = await prisma.accountAction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountActionDeleteManyArgs>(args?: SelectSubset<T, AccountActionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccountActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AccountActions
     * const accountAction = await prisma.accountAction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountActionUpdateManyArgs>(args: SelectSubset<T, AccountActionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AccountAction.
     * @param {AccountActionUpsertArgs} args - Arguments to update or create a AccountAction.
     * @example
     * // Update or create a AccountAction
     * const accountAction = await prisma.accountAction.upsert({
     *   create: {
     *     // ... data to create a AccountAction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AccountAction we want to update
     *   }
     * })
     */
    upsert<T extends AccountActionUpsertArgs>(args: SelectSubset<T, AccountActionUpsertArgs<ExtArgs>>): Prisma__AccountActionClient<$Result.GetResult<Prisma.$AccountActionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AccountActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionCountArgs} args - Arguments to filter AccountActions to count.
     * @example
     * // Count the number of AccountActions
     * const count = await prisma.accountAction.count({
     *   where: {
     *     // ... the filter for the AccountActions we want to count
     *   }
     * })
    **/
    count<T extends AccountActionCountArgs>(
      args?: Subset<T, AccountActionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountActionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AccountAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountActionAggregateArgs>(args: Subset<T, AccountActionAggregateArgs>): Prisma.PrismaPromise<GetAccountActionAggregateType<T>>

    /**
     * Group by AccountAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountActionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountActionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountActionGroupByArgs['orderBy'] }
        : { orderBy?: AccountActionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountActionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountActionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AccountAction model
   */
  readonly fields: AccountActionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AccountAction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountActionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agent<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    account<T extends AccountDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AccountDefaultArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AccountAction model
   */ 
  interface AccountActionFieldRefs {
    readonly id: FieldRef<"AccountAction", 'String'>
    readonly accountId: FieldRef<"AccountAction", 'String'>
    readonly agentId: FieldRef<"AccountAction", 'String'>
    readonly actionType: FieldRef<"AccountAction", 'String'>
    readonly description: FieldRef<"AccountAction", 'String'>
    readonly details: FieldRef<"AccountAction", 'String'>
    readonly createdAt: FieldRef<"AccountAction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AccountAction findUnique
   */
  export type AccountActionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter, which AccountAction to fetch.
     */
    where: AccountActionWhereUniqueInput
  }

  /**
   * AccountAction findUniqueOrThrow
   */
  export type AccountActionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter, which AccountAction to fetch.
     */
    where: AccountActionWhereUniqueInput
  }

  /**
   * AccountAction findFirst
   */
  export type AccountActionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter, which AccountAction to fetch.
     */
    where?: AccountActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountActions to fetch.
     */
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountActions.
     */
    cursor?: AccountActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountActions.
     */
    distinct?: AccountActionScalarFieldEnum | AccountActionScalarFieldEnum[]
  }

  /**
   * AccountAction findFirstOrThrow
   */
  export type AccountActionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter, which AccountAction to fetch.
     */
    where?: AccountActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountActions to fetch.
     */
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountActions.
     */
    cursor?: AccountActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountActions.
     */
    distinct?: AccountActionScalarFieldEnum | AccountActionScalarFieldEnum[]
  }

  /**
   * AccountAction findMany
   */
  export type AccountActionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter, which AccountActions to fetch.
     */
    where?: AccountActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountActions to fetch.
     */
    orderBy?: AccountActionOrderByWithRelationInput | AccountActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AccountActions.
     */
    cursor?: AccountActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountActions.
     */
    skip?: number
    distinct?: AccountActionScalarFieldEnum | AccountActionScalarFieldEnum[]
  }

  /**
   * AccountAction create
   */
  export type AccountActionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * The data needed to create a AccountAction.
     */
    data: XOR<AccountActionCreateInput, AccountActionUncheckedCreateInput>
  }

  /**
   * AccountAction createMany
   */
  export type AccountActionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AccountActions.
     */
    data: AccountActionCreateManyInput | AccountActionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AccountAction createManyAndReturn
   */
  export type AccountActionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AccountActions.
     */
    data: AccountActionCreateManyInput | AccountActionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccountAction update
   */
  export type AccountActionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * The data needed to update a AccountAction.
     */
    data: XOR<AccountActionUpdateInput, AccountActionUncheckedUpdateInput>
    /**
     * Choose, which AccountAction to update.
     */
    where: AccountActionWhereUniqueInput
  }

  /**
   * AccountAction updateMany
   */
  export type AccountActionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AccountActions.
     */
    data: XOR<AccountActionUpdateManyMutationInput, AccountActionUncheckedUpdateManyInput>
    /**
     * Filter which AccountActions to update
     */
    where?: AccountActionWhereInput
  }

  /**
   * AccountAction upsert
   */
  export type AccountActionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * The filter to search for the AccountAction to update in case it exists.
     */
    where: AccountActionWhereUniqueInput
    /**
     * In case the AccountAction found by the `where` argument doesn't exist, create a new AccountAction with this data.
     */
    create: XOR<AccountActionCreateInput, AccountActionUncheckedCreateInput>
    /**
     * In case the AccountAction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountActionUpdateInput, AccountActionUncheckedUpdateInput>
  }

  /**
   * AccountAction delete
   */
  export type AccountActionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
    /**
     * Filter which AccountAction to delete.
     */
    where: AccountActionWhereUniqueInput
  }

  /**
   * AccountAction deleteMany
   */
  export type AccountActionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountActions to delete
     */
    where?: AccountActionWhereInput
  }

  /**
   * AccountAction without action
   */
  export type AccountActionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountAction
     */
    select?: AccountActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountActionInclude<ExtArgs> | null
  }


  /**
   * Model UploadBatch
   */

  export type AggregateUploadBatch = {
    _count: UploadBatchCountAggregateOutputType | null
    _avg: UploadBatchAvgAggregateOutputType | null
    _sum: UploadBatchSumAggregateOutputType | null
    _min: UploadBatchMinAggregateOutputType | null
    _max: UploadBatchMaxAggregateOutputType | null
  }

  export type UploadBatchAvgAggregateOutputType = {
    fileSize: number | null
    totalRecords: number | null
    processedRecords: number | null
    successCount: number | null
    errorCount: number | null
    skipCount: number | null
    duplicateCount: number | null
  }

  export type UploadBatchSumAggregateOutputType = {
    fileSize: number | null
    totalRecords: number | null
    processedRecords: number | null
    successCount: number | null
    errorCount: number | null
    skipCount: number | null
    duplicateCount: number | null
  }

  export type UploadBatchMinAggregateOutputType = {
    id: string | null
    filename: string | null
    originalFilename: string | null
    fileSize: number | null
    mimeType: string | null
    totalRecords: number | null
    processedRecords: number | null
    successCount: number | null
    errorCount: number | null
    skipCount: number | null
    duplicateCount: number | null
    status: string | null
    uploadedById: string | null
    batchName: string | null
    skipErrors: boolean | null
    updateExisting: boolean | null
    processingStarted: Date | null
    processingCompleted: Date | null
    errorLog: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UploadBatchMaxAggregateOutputType = {
    id: string | null
    filename: string | null
    originalFilename: string | null
    fileSize: number | null
    mimeType: string | null
    totalRecords: number | null
    processedRecords: number | null
    successCount: number | null
    errorCount: number | null
    skipCount: number | null
    duplicateCount: number | null
    status: string | null
    uploadedById: string | null
    batchName: string | null
    skipErrors: boolean | null
    updateExisting: boolean | null
    processingStarted: Date | null
    processingCompleted: Date | null
    errorLog: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UploadBatchCountAggregateOutputType = {
    id: number
    filename: number
    originalFilename: number
    fileSize: number
    mimeType: number
    totalRecords: number
    processedRecords: number
    successCount: number
    errorCount: number
    skipCount: number
    duplicateCount: number
    status: number
    uploadedById: number
    batchName: number
    skipErrors: number
    updateExisting: number
    processingStarted: number
    processingCompleted: number
    errorLog: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UploadBatchAvgAggregateInputType = {
    fileSize?: true
    totalRecords?: true
    processedRecords?: true
    successCount?: true
    errorCount?: true
    skipCount?: true
    duplicateCount?: true
  }

  export type UploadBatchSumAggregateInputType = {
    fileSize?: true
    totalRecords?: true
    processedRecords?: true
    successCount?: true
    errorCount?: true
    skipCount?: true
    duplicateCount?: true
  }

  export type UploadBatchMinAggregateInputType = {
    id?: true
    filename?: true
    originalFilename?: true
    fileSize?: true
    mimeType?: true
    totalRecords?: true
    processedRecords?: true
    successCount?: true
    errorCount?: true
    skipCount?: true
    duplicateCount?: true
    status?: true
    uploadedById?: true
    batchName?: true
    skipErrors?: true
    updateExisting?: true
    processingStarted?: true
    processingCompleted?: true
    errorLog?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UploadBatchMaxAggregateInputType = {
    id?: true
    filename?: true
    originalFilename?: true
    fileSize?: true
    mimeType?: true
    totalRecords?: true
    processedRecords?: true
    successCount?: true
    errorCount?: true
    skipCount?: true
    duplicateCount?: true
    status?: true
    uploadedById?: true
    batchName?: true
    skipErrors?: true
    updateExisting?: true
    processingStarted?: true
    processingCompleted?: true
    errorLog?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UploadBatchCountAggregateInputType = {
    id?: true
    filename?: true
    originalFilename?: true
    fileSize?: true
    mimeType?: true
    totalRecords?: true
    processedRecords?: true
    successCount?: true
    errorCount?: true
    skipCount?: true
    duplicateCount?: true
    status?: true
    uploadedById?: true
    batchName?: true
    skipErrors?: true
    updateExisting?: true
    processingStarted?: true
    processingCompleted?: true
    errorLog?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UploadBatchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UploadBatch to aggregate.
     */
    where?: UploadBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UploadBatches to fetch.
     */
    orderBy?: UploadBatchOrderByWithRelationInput | UploadBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UploadBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UploadBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UploadBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UploadBatches
    **/
    _count?: true | UploadBatchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UploadBatchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UploadBatchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UploadBatchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UploadBatchMaxAggregateInputType
  }

  export type GetUploadBatchAggregateType<T extends UploadBatchAggregateArgs> = {
        [P in keyof T & keyof AggregateUploadBatch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUploadBatch[P]>
      : GetScalarType<T[P], AggregateUploadBatch[P]>
  }




  export type UploadBatchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UploadBatchWhereInput
    orderBy?: UploadBatchOrderByWithAggregationInput | UploadBatchOrderByWithAggregationInput[]
    by: UploadBatchScalarFieldEnum[] | UploadBatchScalarFieldEnum
    having?: UploadBatchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UploadBatchCountAggregateInputType | true
    _avg?: UploadBatchAvgAggregateInputType
    _sum?: UploadBatchSumAggregateInputType
    _min?: UploadBatchMinAggregateInputType
    _max?: UploadBatchMaxAggregateInputType
  }

  export type UploadBatchGroupByOutputType = {
    id: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords: number
    processedRecords: number
    successCount: number
    errorCount: number
    skipCount: number
    duplicateCount: number
    status: string
    uploadedById: string
    batchName: string | null
    skipErrors: boolean
    updateExisting: boolean
    processingStarted: Date | null
    processingCompleted: Date | null
    errorLog: string | null
    createdAt: Date
    updatedAt: Date
    _count: UploadBatchCountAggregateOutputType | null
    _avg: UploadBatchAvgAggregateOutputType | null
    _sum: UploadBatchSumAggregateOutputType | null
    _min: UploadBatchMinAggregateOutputType | null
    _max: UploadBatchMaxAggregateOutputType | null
  }

  type GetUploadBatchGroupByPayload<T extends UploadBatchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UploadBatchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UploadBatchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UploadBatchGroupByOutputType[P]>
            : GetScalarType<T[P], UploadBatchGroupByOutputType[P]>
        }
      >
    >


  export type UploadBatchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filename?: boolean
    originalFilename?: boolean
    fileSize?: boolean
    mimeType?: boolean
    totalRecords?: boolean
    processedRecords?: boolean
    successCount?: boolean
    errorCount?: boolean
    skipCount?: boolean
    duplicateCount?: boolean
    status?: boolean
    uploadedById?: boolean
    batchName?: boolean
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: boolean
    processingCompleted?: boolean
    errorLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["uploadBatch"]>

  export type UploadBatchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filename?: boolean
    originalFilename?: boolean
    fileSize?: boolean
    mimeType?: boolean
    totalRecords?: boolean
    processedRecords?: boolean
    successCount?: boolean
    errorCount?: boolean
    skipCount?: boolean
    duplicateCount?: boolean
    status?: boolean
    uploadedById?: boolean
    batchName?: boolean
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: boolean
    processingCompleted?: boolean
    errorLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["uploadBatch"]>

  export type UploadBatchSelectScalar = {
    id?: boolean
    filename?: boolean
    originalFilename?: boolean
    fileSize?: boolean
    mimeType?: boolean
    totalRecords?: boolean
    processedRecords?: boolean
    successCount?: boolean
    errorCount?: boolean
    skipCount?: boolean
    duplicateCount?: boolean
    status?: boolean
    uploadedById?: boolean
    batchName?: boolean
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: boolean
    processingCompleted?: boolean
    errorLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UploadBatchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UploadBatchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UploadBatchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UploadBatch"
    objects: {
      uploadedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      filename: string
      originalFilename: string
      fileSize: number
      mimeType: string
      totalRecords: number
      processedRecords: number
      successCount: number
      errorCount: number
      skipCount: number
      duplicateCount: number
      status: string
      uploadedById: string
      batchName: string | null
      skipErrors: boolean
      updateExisting: boolean
      processingStarted: Date | null
      processingCompleted: Date | null
      errorLog: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["uploadBatch"]>
    composites: {}
  }

  type UploadBatchGetPayload<S extends boolean | null | undefined | UploadBatchDefaultArgs> = $Result.GetResult<Prisma.$UploadBatchPayload, S>

  type UploadBatchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UploadBatchFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UploadBatchCountAggregateInputType | true
    }

  export interface UploadBatchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UploadBatch'], meta: { name: 'UploadBatch' } }
    /**
     * Find zero or one UploadBatch that matches the filter.
     * @param {UploadBatchFindUniqueArgs} args - Arguments to find a UploadBatch
     * @example
     * // Get one UploadBatch
     * const uploadBatch = await prisma.uploadBatch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UploadBatchFindUniqueArgs>(args: SelectSubset<T, UploadBatchFindUniqueArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UploadBatch that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UploadBatchFindUniqueOrThrowArgs} args - Arguments to find a UploadBatch
     * @example
     * // Get one UploadBatch
     * const uploadBatch = await prisma.uploadBatch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UploadBatchFindUniqueOrThrowArgs>(args: SelectSubset<T, UploadBatchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UploadBatch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchFindFirstArgs} args - Arguments to find a UploadBatch
     * @example
     * // Get one UploadBatch
     * const uploadBatch = await prisma.uploadBatch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UploadBatchFindFirstArgs>(args?: SelectSubset<T, UploadBatchFindFirstArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UploadBatch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchFindFirstOrThrowArgs} args - Arguments to find a UploadBatch
     * @example
     * // Get one UploadBatch
     * const uploadBatch = await prisma.uploadBatch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UploadBatchFindFirstOrThrowArgs>(args?: SelectSubset<T, UploadBatchFindFirstOrThrowArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UploadBatches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UploadBatches
     * const uploadBatches = await prisma.uploadBatch.findMany()
     * 
     * // Get first 10 UploadBatches
     * const uploadBatches = await prisma.uploadBatch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const uploadBatchWithIdOnly = await prisma.uploadBatch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UploadBatchFindManyArgs>(args?: SelectSubset<T, UploadBatchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UploadBatch.
     * @param {UploadBatchCreateArgs} args - Arguments to create a UploadBatch.
     * @example
     * // Create one UploadBatch
     * const UploadBatch = await prisma.uploadBatch.create({
     *   data: {
     *     // ... data to create a UploadBatch
     *   }
     * })
     * 
     */
    create<T extends UploadBatchCreateArgs>(args: SelectSubset<T, UploadBatchCreateArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UploadBatches.
     * @param {UploadBatchCreateManyArgs} args - Arguments to create many UploadBatches.
     * @example
     * // Create many UploadBatches
     * const uploadBatch = await prisma.uploadBatch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UploadBatchCreateManyArgs>(args?: SelectSubset<T, UploadBatchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UploadBatches and returns the data saved in the database.
     * @param {UploadBatchCreateManyAndReturnArgs} args - Arguments to create many UploadBatches.
     * @example
     * // Create many UploadBatches
     * const uploadBatch = await prisma.uploadBatch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UploadBatches and only return the `id`
     * const uploadBatchWithIdOnly = await prisma.uploadBatch.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UploadBatchCreateManyAndReturnArgs>(args?: SelectSubset<T, UploadBatchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UploadBatch.
     * @param {UploadBatchDeleteArgs} args - Arguments to delete one UploadBatch.
     * @example
     * // Delete one UploadBatch
     * const UploadBatch = await prisma.uploadBatch.delete({
     *   where: {
     *     // ... filter to delete one UploadBatch
     *   }
     * })
     * 
     */
    delete<T extends UploadBatchDeleteArgs>(args: SelectSubset<T, UploadBatchDeleteArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UploadBatch.
     * @param {UploadBatchUpdateArgs} args - Arguments to update one UploadBatch.
     * @example
     * // Update one UploadBatch
     * const uploadBatch = await prisma.uploadBatch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UploadBatchUpdateArgs>(args: SelectSubset<T, UploadBatchUpdateArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UploadBatches.
     * @param {UploadBatchDeleteManyArgs} args - Arguments to filter UploadBatches to delete.
     * @example
     * // Delete a few UploadBatches
     * const { count } = await prisma.uploadBatch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UploadBatchDeleteManyArgs>(args?: SelectSubset<T, UploadBatchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UploadBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UploadBatches
     * const uploadBatch = await prisma.uploadBatch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UploadBatchUpdateManyArgs>(args: SelectSubset<T, UploadBatchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UploadBatch.
     * @param {UploadBatchUpsertArgs} args - Arguments to update or create a UploadBatch.
     * @example
     * // Update or create a UploadBatch
     * const uploadBatch = await prisma.uploadBatch.upsert({
     *   create: {
     *     // ... data to create a UploadBatch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UploadBatch we want to update
     *   }
     * })
     */
    upsert<T extends UploadBatchUpsertArgs>(args: SelectSubset<T, UploadBatchUpsertArgs<ExtArgs>>): Prisma__UploadBatchClient<$Result.GetResult<Prisma.$UploadBatchPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UploadBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchCountArgs} args - Arguments to filter UploadBatches to count.
     * @example
     * // Count the number of UploadBatches
     * const count = await prisma.uploadBatch.count({
     *   where: {
     *     // ... the filter for the UploadBatches we want to count
     *   }
     * })
    **/
    count<T extends UploadBatchCountArgs>(
      args?: Subset<T, UploadBatchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UploadBatchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UploadBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UploadBatchAggregateArgs>(args: Subset<T, UploadBatchAggregateArgs>): Prisma.PrismaPromise<GetUploadBatchAggregateType<T>>

    /**
     * Group by UploadBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UploadBatchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UploadBatchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UploadBatchGroupByArgs['orderBy'] }
        : { orderBy?: UploadBatchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UploadBatchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUploadBatchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UploadBatch model
   */
  readonly fields: UploadBatchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UploadBatch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UploadBatchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    uploadedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UploadBatch model
   */ 
  interface UploadBatchFieldRefs {
    readonly id: FieldRef<"UploadBatch", 'String'>
    readonly filename: FieldRef<"UploadBatch", 'String'>
    readonly originalFilename: FieldRef<"UploadBatch", 'String'>
    readonly fileSize: FieldRef<"UploadBatch", 'Int'>
    readonly mimeType: FieldRef<"UploadBatch", 'String'>
    readonly totalRecords: FieldRef<"UploadBatch", 'Int'>
    readonly processedRecords: FieldRef<"UploadBatch", 'Int'>
    readonly successCount: FieldRef<"UploadBatch", 'Int'>
    readonly errorCount: FieldRef<"UploadBatch", 'Int'>
    readonly skipCount: FieldRef<"UploadBatch", 'Int'>
    readonly duplicateCount: FieldRef<"UploadBatch", 'Int'>
    readonly status: FieldRef<"UploadBatch", 'String'>
    readonly uploadedById: FieldRef<"UploadBatch", 'String'>
    readonly batchName: FieldRef<"UploadBatch", 'String'>
    readonly skipErrors: FieldRef<"UploadBatch", 'Boolean'>
    readonly updateExisting: FieldRef<"UploadBatch", 'Boolean'>
    readonly processingStarted: FieldRef<"UploadBatch", 'DateTime'>
    readonly processingCompleted: FieldRef<"UploadBatch", 'DateTime'>
    readonly errorLog: FieldRef<"UploadBatch", 'String'>
    readonly createdAt: FieldRef<"UploadBatch", 'DateTime'>
    readonly updatedAt: FieldRef<"UploadBatch", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UploadBatch findUnique
   */
  export type UploadBatchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter, which UploadBatch to fetch.
     */
    where: UploadBatchWhereUniqueInput
  }

  /**
   * UploadBatch findUniqueOrThrow
   */
  export type UploadBatchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter, which UploadBatch to fetch.
     */
    where: UploadBatchWhereUniqueInput
  }

  /**
   * UploadBatch findFirst
   */
  export type UploadBatchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter, which UploadBatch to fetch.
     */
    where?: UploadBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UploadBatches to fetch.
     */
    orderBy?: UploadBatchOrderByWithRelationInput | UploadBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UploadBatches.
     */
    cursor?: UploadBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UploadBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UploadBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UploadBatches.
     */
    distinct?: UploadBatchScalarFieldEnum | UploadBatchScalarFieldEnum[]
  }

  /**
   * UploadBatch findFirstOrThrow
   */
  export type UploadBatchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter, which UploadBatch to fetch.
     */
    where?: UploadBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UploadBatches to fetch.
     */
    orderBy?: UploadBatchOrderByWithRelationInput | UploadBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UploadBatches.
     */
    cursor?: UploadBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UploadBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UploadBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UploadBatches.
     */
    distinct?: UploadBatchScalarFieldEnum | UploadBatchScalarFieldEnum[]
  }

  /**
   * UploadBatch findMany
   */
  export type UploadBatchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter, which UploadBatches to fetch.
     */
    where?: UploadBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UploadBatches to fetch.
     */
    orderBy?: UploadBatchOrderByWithRelationInput | UploadBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UploadBatches.
     */
    cursor?: UploadBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UploadBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UploadBatches.
     */
    skip?: number
    distinct?: UploadBatchScalarFieldEnum | UploadBatchScalarFieldEnum[]
  }

  /**
   * UploadBatch create
   */
  export type UploadBatchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * The data needed to create a UploadBatch.
     */
    data: XOR<UploadBatchCreateInput, UploadBatchUncheckedCreateInput>
  }

  /**
   * UploadBatch createMany
   */
  export type UploadBatchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UploadBatches.
     */
    data: UploadBatchCreateManyInput | UploadBatchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UploadBatch createManyAndReturn
   */
  export type UploadBatchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UploadBatches.
     */
    data: UploadBatchCreateManyInput | UploadBatchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UploadBatch update
   */
  export type UploadBatchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * The data needed to update a UploadBatch.
     */
    data: XOR<UploadBatchUpdateInput, UploadBatchUncheckedUpdateInput>
    /**
     * Choose, which UploadBatch to update.
     */
    where: UploadBatchWhereUniqueInput
  }

  /**
   * UploadBatch updateMany
   */
  export type UploadBatchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UploadBatches.
     */
    data: XOR<UploadBatchUpdateManyMutationInput, UploadBatchUncheckedUpdateManyInput>
    /**
     * Filter which UploadBatches to update
     */
    where?: UploadBatchWhereInput
  }

  /**
   * UploadBatch upsert
   */
  export type UploadBatchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * The filter to search for the UploadBatch to update in case it exists.
     */
    where: UploadBatchWhereUniqueInput
    /**
     * In case the UploadBatch found by the `where` argument doesn't exist, create a new UploadBatch with this data.
     */
    create: XOR<UploadBatchCreateInput, UploadBatchUncheckedCreateInput>
    /**
     * In case the UploadBatch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UploadBatchUpdateInput, UploadBatchUncheckedUpdateInput>
  }

  /**
   * UploadBatch delete
   */
  export type UploadBatchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
    /**
     * Filter which UploadBatch to delete.
     */
    where: UploadBatchWhereUniqueInput
  }

  /**
   * UploadBatch deleteMany
   */
  export type UploadBatchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UploadBatches to delete
     */
    where?: UploadBatchWhereInput
  }

  /**
   * UploadBatch without action
   */
  export type UploadBatchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UploadBatch
     */
    select?: UploadBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UploadBatchInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    role: 'role',
    isActive: 'isActive',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    emailVerified: 'emailVerified',
    emailVerifyToken: 'emailVerifyToken',
    emailVerifyExpires: 'emailVerifyExpires',
    passwordResetToken: 'passwordResetToken',
    passwordResetExpires: 'passwordResetExpires',
    failedLoginAttempts: 'failedLoginAttempts',
    accountLockedUntil: 'accountLockedUntil',
    lastFailedLogin: 'lastFailedLogin',
    passwordChangedAt: 'passwordChangedAt',
    mustChangePassword: 'mustChangePassword'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    accountNumber: 'accountNumber',
    firstName: 'firstName',
    lastName: 'lastName',
    fullName: 'fullName',
    email: 'email',
    address1: 'address1',
    address2: 'address2',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    country: 'country',
    originalAmount: 'originalAmount',
    currentBalance: 'currentBalance',
    amountPaid: 'amountPaid',
    interestRate: 'interestRate',
    lastPaymentDate: 'lastPaymentDate',
    lastPaymentAmount: 'lastPaymentAmount',
    status: 'status',
    priority: 'priority',
    assignedAgentId: 'assignedAgentId',
    assignedDate: 'assignedDate',
    preferredContactMethod: 'preferredContactMethod',
    bestTimeToCall: 'bestTimeToCall',
    timezone: 'timezone',
    language: 'language',
    daysPastDue: 'daysPastDue',
    lastContactDate: 'lastContactDate',
    nextContactDate: 'nextContactDate',
    contactAttempts: 'contactAttempts',
    doNotCall: 'doNotCall',
    disputeFlag: 'disputeFlag',
    bankruptcyFlag: 'bankruptcyFlag',
    deceasedFlag: 'deceasedFlag',
    notes: 'notes',
    source: 'source',
    batchId: 'batchId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const AccountPhoneScalarFieldEnum: {
    id: 'id',
    accountId: 'accountId',
    phoneNumber: 'phoneNumber',
    phoneType: 'phoneType',
    isValid: 'isValid',
    doNotCall: 'doNotCall',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountPhoneScalarFieldEnum = (typeof AccountPhoneScalarFieldEnum)[keyof typeof AccountPhoneScalarFieldEnum]


  export const CallScalarFieldEnum: {
    id: 'id',
    accountId: 'accountId',
    accountPhoneId: 'accountPhoneId',
    agentId: 'agentId',
    direction: 'direction',
    startTime: 'startTime',
    endTime: 'endTime',
    duration: 'duration',
    status: 'status',
    disposition: 'disposition',
    notes: 'notes',
    followUpDate: 'followUpDate',
    amountPromised: 'amountPromised',
    amountCollected: 'amountCollected',
    recordingPath: 'recordingPath',
    callerId: 'callerId',
    campaignId: 'campaignId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CallScalarFieldEnum = (typeof CallScalarFieldEnum)[keyof typeof CallScalarFieldEnum]


  export const AccountActionScalarFieldEnum: {
    id: 'id',
    accountId: 'accountId',
    agentId: 'agentId',
    actionType: 'actionType',
    description: 'description',
    details: 'details',
    createdAt: 'createdAt'
  };

  export type AccountActionScalarFieldEnum = (typeof AccountActionScalarFieldEnum)[keyof typeof AccountActionScalarFieldEnum]


  export const UploadBatchScalarFieldEnum: {
    id: 'id',
    filename: 'filename',
    originalFilename: 'originalFilename',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    totalRecords: 'totalRecords',
    processedRecords: 'processedRecords',
    successCount: 'successCount',
    errorCount: 'errorCount',
    skipCount: 'skipCount',
    duplicateCount: 'duplicateCount',
    status: 'status',
    uploadedById: 'uploadedById',
    batchName: 'batchName',
    skipErrors: 'skipErrors',
    updateExisting: 'updateExisting',
    processingStarted: 'processingStarted',
    processingCompleted: 'processingCompleted',
    errorLog: 'errorLog',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UploadBatchScalarFieldEnum = (typeof UploadBatchScalarFieldEnum)[keyof typeof UploadBatchScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifyToken?: StringNullableFilter<"User"> | string | null
    emailVerifyExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    accountLockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    lastFailedLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    passwordChangedAt?: DateTimeFilter<"User"> | Date | string
    mustChangePassword?: BoolFilter<"User"> | boolean
    accountActions?: AccountActionListRelationFilter
    assignedAccounts?: AccountListRelationFilter
    calls?: CallListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    uploadBatches?: UploadBatchListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifyToken?: SortOrderInput | SortOrder
    emailVerifyExpires?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    accountLockedUntil?: SortOrderInput | SortOrder
    lastFailedLogin?: SortOrderInput | SortOrder
    passwordChangedAt?: SortOrder
    mustChangePassword?: SortOrder
    accountActions?: AccountActionOrderByRelationAggregateInput
    assignedAccounts?: AccountOrderByRelationAggregateInput
    calls?: CallOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
    uploadBatches?: UploadBatchOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    emailVerifyToken?: string
    passwordResetToken?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifyExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    accountLockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    lastFailedLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    passwordChangedAt?: DateTimeFilter<"User"> | Date | string
    mustChangePassword?: BoolFilter<"User"> | boolean
    accountActions?: AccountActionListRelationFilter
    assignedAccounts?: AccountListRelationFilter
    calls?: CallListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    uploadBatches?: UploadBatchListRelationFilter
  }, "id" | "email" | "emailVerifyToken" | "passwordResetToken">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifyToken?: SortOrderInput | SortOrder
    emailVerifyExpires?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    accountLockedUntil?: SortOrderInput | SortOrder
    lastFailedLogin?: SortOrderInput | SortOrder
    passwordChangedAt?: SortOrder
    mustChangePassword?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    lastLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerifyToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerifyExpires?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    passwordResetToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntWithAggregatesFilter<"User"> | number
    accountLockedUntil?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    lastFailedLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    passwordChangedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    mustChangePassword?: BoolWithAggregatesFilter<"User"> | boolean
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    accountNumber?: StringFilter<"Account"> | string
    firstName?: StringFilter<"Account"> | string
    lastName?: StringFilter<"Account"> | string
    fullName?: StringFilter<"Account"> | string
    email?: StringNullableFilter<"Account"> | string | null
    address1?: StringNullableFilter<"Account"> | string | null
    address2?: StringNullableFilter<"Account"> | string | null
    city?: StringNullableFilter<"Account"> | string | null
    state?: StringNullableFilter<"Account"> | string | null
    zipCode?: StringNullableFilter<"Account"> | string | null
    country?: StringNullableFilter<"Account"> | string | null
    originalAmount?: FloatFilter<"Account"> | number
    currentBalance?: FloatFilter<"Account"> | number
    amountPaid?: FloatFilter<"Account"> | number
    interestRate?: FloatNullableFilter<"Account"> | number | null
    lastPaymentDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    lastPaymentAmount?: FloatNullableFilter<"Account"> | number | null
    status?: StringFilter<"Account"> | string
    priority?: StringFilter<"Account"> | string
    assignedAgentId?: StringNullableFilter<"Account"> | string | null
    assignedDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    preferredContactMethod?: StringNullableFilter<"Account"> | string | null
    bestTimeToCall?: StringNullableFilter<"Account"> | string | null
    timezone?: StringNullableFilter<"Account"> | string | null
    language?: StringNullableFilter<"Account"> | string | null
    daysPastDue?: IntFilter<"Account"> | number
    lastContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    nextContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    contactAttempts?: IntFilter<"Account"> | number
    doNotCall?: BoolFilter<"Account"> | boolean
    disputeFlag?: BoolFilter<"Account"> | boolean
    bankruptcyFlag?: BoolFilter<"Account"> | boolean
    deceasedFlag?: BoolFilter<"Account"> | boolean
    notes?: StringNullableFilter<"Account"> | string | null
    source?: StringNullableFilter<"Account"> | string | null
    batchId?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    actions?: AccountActionListRelationFilter
    phoneNumbers?: AccountPhoneListRelationFilter
    assignedAgent?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    calls?: CallListRelationFilter
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    accountNumber?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    fullName?: SortOrder
    email?: SortOrderInput | SortOrder
    address1?: SortOrderInput | SortOrder
    address2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrderInput | SortOrder
    lastPaymentDate?: SortOrderInput | SortOrder
    lastPaymentAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    assignedAgentId?: SortOrderInput | SortOrder
    assignedDate?: SortOrderInput | SortOrder
    preferredContactMethod?: SortOrderInput | SortOrder
    bestTimeToCall?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    daysPastDue?: SortOrder
    lastContactDate?: SortOrderInput | SortOrder
    nextContactDate?: SortOrderInput | SortOrder
    contactAttempts?: SortOrder
    doNotCall?: SortOrder
    disputeFlag?: SortOrder
    bankruptcyFlag?: SortOrder
    deceasedFlag?: SortOrder
    notes?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    batchId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actions?: AccountActionOrderByRelationAggregateInput
    phoneNumbers?: AccountPhoneOrderByRelationAggregateInput
    assignedAgent?: UserOrderByWithRelationInput
    calls?: CallOrderByRelationAggregateInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    accountNumber?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    firstName?: StringFilter<"Account"> | string
    lastName?: StringFilter<"Account"> | string
    fullName?: StringFilter<"Account"> | string
    email?: StringNullableFilter<"Account"> | string | null
    address1?: StringNullableFilter<"Account"> | string | null
    address2?: StringNullableFilter<"Account"> | string | null
    city?: StringNullableFilter<"Account"> | string | null
    state?: StringNullableFilter<"Account"> | string | null
    zipCode?: StringNullableFilter<"Account"> | string | null
    country?: StringNullableFilter<"Account"> | string | null
    originalAmount?: FloatFilter<"Account"> | number
    currentBalance?: FloatFilter<"Account"> | number
    amountPaid?: FloatFilter<"Account"> | number
    interestRate?: FloatNullableFilter<"Account"> | number | null
    lastPaymentDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    lastPaymentAmount?: FloatNullableFilter<"Account"> | number | null
    status?: StringFilter<"Account"> | string
    priority?: StringFilter<"Account"> | string
    assignedAgentId?: StringNullableFilter<"Account"> | string | null
    assignedDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    preferredContactMethod?: StringNullableFilter<"Account"> | string | null
    bestTimeToCall?: StringNullableFilter<"Account"> | string | null
    timezone?: StringNullableFilter<"Account"> | string | null
    language?: StringNullableFilter<"Account"> | string | null
    daysPastDue?: IntFilter<"Account"> | number
    lastContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    nextContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    contactAttempts?: IntFilter<"Account"> | number
    doNotCall?: BoolFilter<"Account"> | boolean
    disputeFlag?: BoolFilter<"Account"> | boolean
    bankruptcyFlag?: BoolFilter<"Account"> | boolean
    deceasedFlag?: BoolFilter<"Account"> | boolean
    notes?: StringNullableFilter<"Account"> | string | null
    source?: StringNullableFilter<"Account"> | string | null
    batchId?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    actions?: AccountActionListRelationFilter
    phoneNumbers?: AccountPhoneListRelationFilter
    assignedAgent?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    calls?: CallListRelationFilter
  }, "id" | "accountNumber">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    accountNumber?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    fullName?: SortOrder
    email?: SortOrderInput | SortOrder
    address1?: SortOrderInput | SortOrder
    address2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrderInput | SortOrder
    lastPaymentDate?: SortOrderInput | SortOrder
    lastPaymentAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    assignedAgentId?: SortOrderInput | SortOrder
    assignedDate?: SortOrderInput | SortOrder
    preferredContactMethod?: SortOrderInput | SortOrder
    bestTimeToCall?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    daysPastDue?: SortOrder
    lastContactDate?: SortOrderInput | SortOrder
    nextContactDate?: SortOrderInput | SortOrder
    contactAttempts?: SortOrder
    doNotCall?: SortOrder
    disputeFlag?: SortOrder
    bankruptcyFlag?: SortOrder
    deceasedFlag?: SortOrder
    notes?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    batchId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    accountNumber?: StringWithAggregatesFilter<"Account"> | string
    firstName?: StringWithAggregatesFilter<"Account"> | string
    lastName?: StringWithAggregatesFilter<"Account"> | string
    fullName?: StringWithAggregatesFilter<"Account"> | string
    email?: StringNullableWithAggregatesFilter<"Account"> | string | null
    address1?: StringNullableWithAggregatesFilter<"Account"> | string | null
    address2?: StringNullableWithAggregatesFilter<"Account"> | string | null
    city?: StringNullableWithAggregatesFilter<"Account"> | string | null
    state?: StringNullableWithAggregatesFilter<"Account"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"Account"> | string | null
    country?: StringNullableWithAggregatesFilter<"Account"> | string | null
    originalAmount?: FloatWithAggregatesFilter<"Account"> | number
    currentBalance?: FloatWithAggregatesFilter<"Account"> | number
    amountPaid?: FloatWithAggregatesFilter<"Account"> | number
    interestRate?: FloatNullableWithAggregatesFilter<"Account"> | number | null
    lastPaymentDate?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    lastPaymentAmount?: FloatNullableWithAggregatesFilter<"Account"> | number | null
    status?: StringWithAggregatesFilter<"Account"> | string
    priority?: StringWithAggregatesFilter<"Account"> | string
    assignedAgentId?: StringNullableWithAggregatesFilter<"Account"> | string | null
    assignedDate?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    preferredContactMethod?: StringNullableWithAggregatesFilter<"Account"> | string | null
    bestTimeToCall?: StringNullableWithAggregatesFilter<"Account"> | string | null
    timezone?: StringNullableWithAggregatesFilter<"Account"> | string | null
    language?: StringNullableWithAggregatesFilter<"Account"> | string | null
    daysPastDue?: IntWithAggregatesFilter<"Account"> | number
    lastContactDate?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    nextContactDate?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    contactAttempts?: IntWithAggregatesFilter<"Account"> | number
    doNotCall?: BoolWithAggregatesFilter<"Account"> | boolean
    disputeFlag?: BoolWithAggregatesFilter<"Account"> | boolean
    bankruptcyFlag?: BoolWithAggregatesFilter<"Account"> | boolean
    deceasedFlag?: BoolWithAggregatesFilter<"Account"> | boolean
    notes?: StringNullableWithAggregatesFilter<"Account"> | string | null
    source?: StringNullableWithAggregatesFilter<"Account"> | string | null
    batchId?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type AccountPhoneWhereInput = {
    AND?: AccountPhoneWhereInput | AccountPhoneWhereInput[]
    OR?: AccountPhoneWhereInput[]
    NOT?: AccountPhoneWhereInput | AccountPhoneWhereInput[]
    id?: StringFilter<"AccountPhone"> | string
    accountId?: StringFilter<"AccountPhone"> | string
    phoneNumber?: StringFilter<"AccountPhone"> | string
    phoneType?: StringFilter<"AccountPhone"> | string
    isValid?: BoolFilter<"AccountPhone"> | boolean
    doNotCall?: BoolFilter<"AccountPhone"> | boolean
    notes?: StringNullableFilter<"AccountPhone"> | string | null
    createdAt?: DateTimeFilter<"AccountPhone"> | Date | string
    updatedAt?: DateTimeFilter<"AccountPhone"> | Date | string
    account?: XOR<AccountRelationFilter, AccountWhereInput>
    calls?: CallListRelationFilter
  }

  export type AccountPhoneOrderByWithRelationInput = {
    id?: SortOrder
    accountId?: SortOrder
    phoneNumber?: SortOrder
    phoneType?: SortOrder
    isValid?: SortOrder
    doNotCall?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    account?: AccountOrderByWithRelationInput
    calls?: CallOrderByRelationAggregateInput
  }

  export type AccountPhoneWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    accountId_phoneNumber?: AccountPhoneAccountIdPhoneNumberCompoundUniqueInput
    AND?: AccountPhoneWhereInput | AccountPhoneWhereInput[]
    OR?: AccountPhoneWhereInput[]
    NOT?: AccountPhoneWhereInput | AccountPhoneWhereInput[]
    accountId?: StringFilter<"AccountPhone"> | string
    phoneNumber?: StringFilter<"AccountPhone"> | string
    phoneType?: StringFilter<"AccountPhone"> | string
    isValid?: BoolFilter<"AccountPhone"> | boolean
    doNotCall?: BoolFilter<"AccountPhone"> | boolean
    notes?: StringNullableFilter<"AccountPhone"> | string | null
    createdAt?: DateTimeFilter<"AccountPhone"> | Date | string
    updatedAt?: DateTimeFilter<"AccountPhone"> | Date | string
    account?: XOR<AccountRelationFilter, AccountWhereInput>
    calls?: CallListRelationFilter
  }, "id" | "accountId_phoneNumber">

  export type AccountPhoneOrderByWithAggregationInput = {
    id?: SortOrder
    accountId?: SortOrder
    phoneNumber?: SortOrder
    phoneType?: SortOrder
    isValid?: SortOrder
    doNotCall?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountPhoneCountOrderByAggregateInput
    _max?: AccountPhoneMaxOrderByAggregateInput
    _min?: AccountPhoneMinOrderByAggregateInput
  }

  export type AccountPhoneScalarWhereWithAggregatesInput = {
    AND?: AccountPhoneScalarWhereWithAggregatesInput | AccountPhoneScalarWhereWithAggregatesInput[]
    OR?: AccountPhoneScalarWhereWithAggregatesInput[]
    NOT?: AccountPhoneScalarWhereWithAggregatesInput | AccountPhoneScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AccountPhone"> | string
    accountId?: StringWithAggregatesFilter<"AccountPhone"> | string
    phoneNumber?: StringWithAggregatesFilter<"AccountPhone"> | string
    phoneType?: StringWithAggregatesFilter<"AccountPhone"> | string
    isValid?: BoolWithAggregatesFilter<"AccountPhone"> | boolean
    doNotCall?: BoolWithAggregatesFilter<"AccountPhone"> | boolean
    notes?: StringNullableWithAggregatesFilter<"AccountPhone"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AccountPhone"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AccountPhone"> | Date | string
  }

  export type CallWhereInput = {
    AND?: CallWhereInput | CallWhereInput[]
    OR?: CallWhereInput[]
    NOT?: CallWhereInput | CallWhereInput[]
    id?: StringFilter<"Call"> | string
    accountId?: StringFilter<"Call"> | string
    accountPhoneId?: StringNullableFilter<"Call"> | string | null
    agentId?: StringFilter<"Call"> | string
    direction?: StringFilter<"Call"> | string
    startTime?: DateTimeFilter<"Call"> | Date | string
    endTime?: DateTimeNullableFilter<"Call"> | Date | string | null
    duration?: IntNullableFilter<"Call"> | number | null
    status?: StringFilter<"Call"> | string
    disposition?: StringNullableFilter<"Call"> | string | null
    notes?: StringNullableFilter<"Call"> | string | null
    followUpDate?: DateTimeNullableFilter<"Call"> | Date | string | null
    amountPromised?: FloatNullableFilter<"Call"> | number | null
    amountCollected?: FloatNullableFilter<"Call"> | number | null
    recordingPath?: StringNullableFilter<"Call"> | string | null
    callerId?: StringNullableFilter<"Call"> | string | null
    campaignId?: StringNullableFilter<"Call"> | string | null
    createdAt?: DateTimeFilter<"Call"> | Date | string
    updatedAt?: DateTimeFilter<"Call"> | Date | string
    agent?: XOR<UserRelationFilter, UserWhereInput>
    accountPhone?: XOR<AccountPhoneNullableRelationFilter, AccountPhoneWhereInput> | null
    account?: XOR<AccountRelationFilter, AccountWhereInput>
  }

  export type CallOrderByWithRelationInput = {
    id?: SortOrder
    accountId?: SortOrder
    accountPhoneId?: SortOrderInput | SortOrder
    agentId?: SortOrder
    direction?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    status?: SortOrder
    disposition?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    followUpDate?: SortOrderInput | SortOrder
    amountPromised?: SortOrderInput | SortOrder
    amountCollected?: SortOrderInput | SortOrder
    recordingPath?: SortOrderInput | SortOrder
    callerId?: SortOrderInput | SortOrder
    campaignId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agent?: UserOrderByWithRelationInput
    accountPhone?: AccountPhoneOrderByWithRelationInput
    account?: AccountOrderByWithRelationInput
  }

  export type CallWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CallWhereInput | CallWhereInput[]
    OR?: CallWhereInput[]
    NOT?: CallWhereInput | CallWhereInput[]
    accountId?: StringFilter<"Call"> | string
    accountPhoneId?: StringNullableFilter<"Call"> | string | null
    agentId?: StringFilter<"Call"> | string
    direction?: StringFilter<"Call"> | string
    startTime?: DateTimeFilter<"Call"> | Date | string
    endTime?: DateTimeNullableFilter<"Call"> | Date | string | null
    duration?: IntNullableFilter<"Call"> | number | null
    status?: StringFilter<"Call"> | string
    disposition?: StringNullableFilter<"Call"> | string | null
    notes?: StringNullableFilter<"Call"> | string | null
    followUpDate?: DateTimeNullableFilter<"Call"> | Date | string | null
    amountPromised?: FloatNullableFilter<"Call"> | number | null
    amountCollected?: FloatNullableFilter<"Call"> | number | null
    recordingPath?: StringNullableFilter<"Call"> | string | null
    callerId?: StringNullableFilter<"Call"> | string | null
    campaignId?: StringNullableFilter<"Call"> | string | null
    createdAt?: DateTimeFilter<"Call"> | Date | string
    updatedAt?: DateTimeFilter<"Call"> | Date | string
    agent?: XOR<UserRelationFilter, UserWhereInput>
    accountPhone?: XOR<AccountPhoneNullableRelationFilter, AccountPhoneWhereInput> | null
    account?: XOR<AccountRelationFilter, AccountWhereInput>
  }, "id">

  export type CallOrderByWithAggregationInput = {
    id?: SortOrder
    accountId?: SortOrder
    accountPhoneId?: SortOrderInput | SortOrder
    agentId?: SortOrder
    direction?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    status?: SortOrder
    disposition?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    followUpDate?: SortOrderInput | SortOrder
    amountPromised?: SortOrderInput | SortOrder
    amountCollected?: SortOrderInput | SortOrder
    recordingPath?: SortOrderInput | SortOrder
    callerId?: SortOrderInput | SortOrder
    campaignId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CallCountOrderByAggregateInput
    _avg?: CallAvgOrderByAggregateInput
    _max?: CallMaxOrderByAggregateInput
    _min?: CallMinOrderByAggregateInput
    _sum?: CallSumOrderByAggregateInput
  }

  export type CallScalarWhereWithAggregatesInput = {
    AND?: CallScalarWhereWithAggregatesInput | CallScalarWhereWithAggregatesInput[]
    OR?: CallScalarWhereWithAggregatesInput[]
    NOT?: CallScalarWhereWithAggregatesInput | CallScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Call"> | string
    accountId?: StringWithAggregatesFilter<"Call"> | string
    accountPhoneId?: StringNullableWithAggregatesFilter<"Call"> | string | null
    agentId?: StringWithAggregatesFilter<"Call"> | string
    direction?: StringWithAggregatesFilter<"Call"> | string
    startTime?: DateTimeWithAggregatesFilter<"Call"> | Date | string
    endTime?: DateTimeNullableWithAggregatesFilter<"Call"> | Date | string | null
    duration?: IntNullableWithAggregatesFilter<"Call"> | number | null
    status?: StringWithAggregatesFilter<"Call"> | string
    disposition?: StringNullableWithAggregatesFilter<"Call"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Call"> | string | null
    followUpDate?: DateTimeNullableWithAggregatesFilter<"Call"> | Date | string | null
    amountPromised?: FloatNullableWithAggregatesFilter<"Call"> | number | null
    amountCollected?: FloatNullableWithAggregatesFilter<"Call"> | number | null
    recordingPath?: StringNullableWithAggregatesFilter<"Call"> | string | null
    callerId?: StringNullableWithAggregatesFilter<"Call"> | string | null
    campaignId?: StringNullableWithAggregatesFilter<"Call"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Call"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Call"> | Date | string
  }

  export type AccountActionWhereInput = {
    AND?: AccountActionWhereInput | AccountActionWhereInput[]
    OR?: AccountActionWhereInput[]
    NOT?: AccountActionWhereInput | AccountActionWhereInput[]
    id?: StringFilter<"AccountAction"> | string
    accountId?: StringFilter<"AccountAction"> | string
    agentId?: StringFilter<"AccountAction"> | string
    actionType?: StringFilter<"AccountAction"> | string
    description?: StringFilter<"AccountAction"> | string
    details?: StringNullableFilter<"AccountAction"> | string | null
    createdAt?: DateTimeFilter<"AccountAction"> | Date | string
    agent?: XOR<UserRelationFilter, UserWhereInput>
    account?: XOR<AccountRelationFilter, AccountWhereInput>
  }

  export type AccountActionOrderByWithRelationInput = {
    id?: SortOrder
    accountId?: SortOrder
    agentId?: SortOrder
    actionType?: SortOrder
    description?: SortOrder
    details?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    agent?: UserOrderByWithRelationInput
    account?: AccountOrderByWithRelationInput
  }

  export type AccountActionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountActionWhereInput | AccountActionWhereInput[]
    OR?: AccountActionWhereInput[]
    NOT?: AccountActionWhereInput | AccountActionWhereInput[]
    accountId?: StringFilter<"AccountAction"> | string
    agentId?: StringFilter<"AccountAction"> | string
    actionType?: StringFilter<"AccountAction"> | string
    description?: StringFilter<"AccountAction"> | string
    details?: StringNullableFilter<"AccountAction"> | string | null
    createdAt?: DateTimeFilter<"AccountAction"> | Date | string
    agent?: XOR<UserRelationFilter, UserWhereInput>
    account?: XOR<AccountRelationFilter, AccountWhereInput>
  }, "id">

  export type AccountActionOrderByWithAggregationInput = {
    id?: SortOrder
    accountId?: SortOrder
    agentId?: SortOrder
    actionType?: SortOrder
    description?: SortOrder
    details?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AccountActionCountOrderByAggregateInput
    _max?: AccountActionMaxOrderByAggregateInput
    _min?: AccountActionMinOrderByAggregateInput
  }

  export type AccountActionScalarWhereWithAggregatesInput = {
    AND?: AccountActionScalarWhereWithAggregatesInput | AccountActionScalarWhereWithAggregatesInput[]
    OR?: AccountActionScalarWhereWithAggregatesInput[]
    NOT?: AccountActionScalarWhereWithAggregatesInput | AccountActionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AccountAction"> | string
    accountId?: StringWithAggregatesFilter<"AccountAction"> | string
    agentId?: StringWithAggregatesFilter<"AccountAction"> | string
    actionType?: StringWithAggregatesFilter<"AccountAction"> | string
    description?: StringWithAggregatesFilter<"AccountAction"> | string
    details?: StringNullableWithAggregatesFilter<"AccountAction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AccountAction"> | Date | string
  }

  export type UploadBatchWhereInput = {
    AND?: UploadBatchWhereInput | UploadBatchWhereInput[]
    OR?: UploadBatchWhereInput[]
    NOT?: UploadBatchWhereInput | UploadBatchWhereInput[]
    id?: StringFilter<"UploadBatch"> | string
    filename?: StringFilter<"UploadBatch"> | string
    originalFilename?: StringFilter<"UploadBatch"> | string
    fileSize?: IntFilter<"UploadBatch"> | number
    mimeType?: StringFilter<"UploadBatch"> | string
    totalRecords?: IntFilter<"UploadBatch"> | number
    processedRecords?: IntFilter<"UploadBatch"> | number
    successCount?: IntFilter<"UploadBatch"> | number
    errorCount?: IntFilter<"UploadBatch"> | number
    skipCount?: IntFilter<"UploadBatch"> | number
    duplicateCount?: IntFilter<"UploadBatch"> | number
    status?: StringFilter<"UploadBatch"> | string
    uploadedById?: StringFilter<"UploadBatch"> | string
    batchName?: StringNullableFilter<"UploadBatch"> | string | null
    skipErrors?: BoolFilter<"UploadBatch"> | boolean
    updateExisting?: BoolFilter<"UploadBatch"> | boolean
    processingStarted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    processingCompleted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    errorLog?: StringNullableFilter<"UploadBatch"> | string | null
    createdAt?: DateTimeFilter<"UploadBatch"> | Date | string
    updatedAt?: DateTimeFilter<"UploadBatch"> | Date | string
    uploadedBy?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UploadBatchOrderByWithRelationInput = {
    id?: SortOrder
    filename?: SortOrder
    originalFilename?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    batchName?: SortOrderInput | SortOrder
    skipErrors?: SortOrder
    updateExisting?: SortOrder
    processingStarted?: SortOrderInput | SortOrder
    processingCompleted?: SortOrderInput | SortOrder
    errorLog?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    uploadedBy?: UserOrderByWithRelationInput
  }

  export type UploadBatchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UploadBatchWhereInput | UploadBatchWhereInput[]
    OR?: UploadBatchWhereInput[]
    NOT?: UploadBatchWhereInput | UploadBatchWhereInput[]
    filename?: StringFilter<"UploadBatch"> | string
    originalFilename?: StringFilter<"UploadBatch"> | string
    fileSize?: IntFilter<"UploadBatch"> | number
    mimeType?: StringFilter<"UploadBatch"> | string
    totalRecords?: IntFilter<"UploadBatch"> | number
    processedRecords?: IntFilter<"UploadBatch"> | number
    successCount?: IntFilter<"UploadBatch"> | number
    errorCount?: IntFilter<"UploadBatch"> | number
    skipCount?: IntFilter<"UploadBatch"> | number
    duplicateCount?: IntFilter<"UploadBatch"> | number
    status?: StringFilter<"UploadBatch"> | string
    uploadedById?: StringFilter<"UploadBatch"> | string
    batchName?: StringNullableFilter<"UploadBatch"> | string | null
    skipErrors?: BoolFilter<"UploadBatch"> | boolean
    updateExisting?: BoolFilter<"UploadBatch"> | boolean
    processingStarted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    processingCompleted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    errorLog?: StringNullableFilter<"UploadBatch"> | string | null
    createdAt?: DateTimeFilter<"UploadBatch"> | Date | string
    updatedAt?: DateTimeFilter<"UploadBatch"> | Date | string
    uploadedBy?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type UploadBatchOrderByWithAggregationInput = {
    id?: SortOrder
    filename?: SortOrder
    originalFilename?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    batchName?: SortOrderInput | SortOrder
    skipErrors?: SortOrder
    updateExisting?: SortOrder
    processingStarted?: SortOrderInput | SortOrder
    processingCompleted?: SortOrderInput | SortOrder
    errorLog?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UploadBatchCountOrderByAggregateInput
    _avg?: UploadBatchAvgOrderByAggregateInput
    _max?: UploadBatchMaxOrderByAggregateInput
    _min?: UploadBatchMinOrderByAggregateInput
    _sum?: UploadBatchSumOrderByAggregateInput
  }

  export type UploadBatchScalarWhereWithAggregatesInput = {
    AND?: UploadBatchScalarWhereWithAggregatesInput | UploadBatchScalarWhereWithAggregatesInput[]
    OR?: UploadBatchScalarWhereWithAggregatesInput[]
    NOT?: UploadBatchScalarWhereWithAggregatesInput | UploadBatchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UploadBatch"> | string
    filename?: StringWithAggregatesFilter<"UploadBatch"> | string
    originalFilename?: StringWithAggregatesFilter<"UploadBatch"> | string
    fileSize?: IntWithAggregatesFilter<"UploadBatch"> | number
    mimeType?: StringWithAggregatesFilter<"UploadBatch"> | string
    totalRecords?: IntWithAggregatesFilter<"UploadBatch"> | number
    processedRecords?: IntWithAggregatesFilter<"UploadBatch"> | number
    successCount?: IntWithAggregatesFilter<"UploadBatch"> | number
    errorCount?: IntWithAggregatesFilter<"UploadBatch"> | number
    skipCount?: IntWithAggregatesFilter<"UploadBatch"> | number
    duplicateCount?: IntWithAggregatesFilter<"UploadBatch"> | number
    status?: StringWithAggregatesFilter<"UploadBatch"> | string
    uploadedById?: StringWithAggregatesFilter<"UploadBatch"> | string
    batchName?: StringNullableWithAggregatesFilter<"UploadBatch"> | string | null
    skipErrors?: BoolWithAggregatesFilter<"UploadBatch"> | boolean
    updateExisting?: BoolWithAggregatesFilter<"UploadBatch"> | boolean
    processingStarted?: DateTimeNullableWithAggregatesFilter<"UploadBatch"> | Date | string | null
    processingCompleted?: DateTimeNullableWithAggregatesFilter<"UploadBatch"> | Date | string | null
    errorLog?: StringNullableWithAggregatesFilter<"UploadBatch"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UploadBatch"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UploadBatch"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountCreateNestedManyWithoutAssignedAgentInput
    calls?: CallCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchCreateNestedManyWithoutUploadedByInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionUncheckedCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountUncheckedCreateNestedManyWithoutAssignedAgentInput
    calls?: CallUncheckedCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUpdateManyWithoutUploadedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUncheckedUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUncheckedUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneCreateNestedManyWithoutAccountInput
    assignedAgent?: UserCreateNestedOneWithoutAssignedAccountsInput
    calls?: CallCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedAgentId?: string | null
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionUncheckedCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneUncheckedCreateNestedManyWithoutAccountInput
    calls?: CallUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUpdateManyWithoutAccountNestedInput
    assignedAgent?: UserUpdateOneWithoutAssignedAccountsNestedInput
    calls?: CallUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedAgentId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUncheckedUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUncheckedUpdateManyWithoutAccountNestedInput
    calls?: CallUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type AccountCreateManyInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedAgentId?: string | null
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedAgentId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountPhoneCreateInput = {
    id?: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    account: AccountCreateNestedOneWithoutPhoneNumbersInput
    calls?: CallCreateNestedManyWithoutAccountPhoneInput
  }

  export type AccountPhoneUncheckedCreateInput = {
    id?: string
    accountId: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calls?: CallUncheckedCreateNestedManyWithoutAccountPhoneInput
  }

  export type AccountPhoneUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: AccountUpdateOneRequiredWithoutPhoneNumbersNestedInput
    calls?: CallUpdateManyWithoutAccountPhoneNestedInput
  }

  export type AccountPhoneUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calls?: CallUncheckedUpdateManyWithoutAccountPhoneNestedInput
  }

  export type AccountPhoneCreateManyInput = {
    id?: string
    accountId: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountPhoneUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountPhoneUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallCreateInput = {
    id?: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agent: UserCreateNestedOneWithoutCallsInput
    accountPhone?: AccountPhoneCreateNestedOneWithoutCallsInput
    account: AccountCreateNestedOneWithoutCallsInput
  }

  export type CallUncheckedCreateInput = {
    id?: string
    accountId: string
    accountPhoneId?: string | null
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: UserUpdateOneRequiredWithoutCallsNestedInput
    accountPhone?: AccountPhoneUpdateOneWithoutCallsNestedInput
    account?: AccountUpdateOneRequiredWithoutCallsNestedInput
  }

  export type CallUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallCreateManyInput = {
    id?: string
    accountId: string
    accountPhoneId?: string | null
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionCreateInput = {
    id?: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
    agent: UserCreateNestedOneWithoutAccountActionsInput
    account: AccountCreateNestedOneWithoutActionsInput
  }

  export type AccountActionUncheckedCreateInput = {
    id?: string
    accountId: string
    agentId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountActionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: UserUpdateOneRequiredWithoutAccountActionsNestedInput
    account?: AccountUpdateOneRequiredWithoutActionsNestedInput
  }

  export type AccountActionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionCreateManyInput = {
    id?: string
    accountId: string
    agentId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountActionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchCreateInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    uploadedBy: UserCreateNestedOneWithoutUploadBatchesInput
  }

  export type UploadBatchUncheckedCreateInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    uploadedById: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UploadBatchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    uploadedBy?: UserUpdateOneRequiredWithoutUploadBatchesNestedInput
  }

  export type UploadBatchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    uploadedById?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchCreateManyInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    uploadedById: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UploadBatchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    uploadedById?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type AccountActionListRelationFilter = {
    every?: AccountActionWhereInput
    some?: AccountActionWhereInput
    none?: AccountActionWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type CallListRelationFilter = {
    every?: CallWhereInput
    some?: CallWhereInput
    none?: CallWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type UploadBatchListRelationFilter = {
    every?: UploadBatchWhereInput
    some?: UploadBatchWhereInput
    none?: UploadBatchWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountActionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CallOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UploadBatchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    emailVerifyExpires?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    failedLoginAttempts?: SortOrder
    accountLockedUntil?: SortOrder
    lastFailedLogin?: SortOrder
    passwordChangedAt?: SortOrder
    mustChangePassword?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    emailVerifyExpires?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    failedLoginAttempts?: SortOrder
    accountLockedUntil?: SortOrder
    lastFailedLogin?: SortOrder
    passwordChangedAt?: SortOrder
    mustChangePassword?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    emailVerifyExpires?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    failedLoginAttempts?: SortOrder
    accountLockedUntil?: SortOrder
    lastFailedLogin?: SortOrder
    passwordChangedAt?: SortOrder
    mustChangePassword?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type AccountPhoneListRelationFilter = {
    every?: AccountPhoneWhereInput
    some?: AccountPhoneWhereInput
    none?: AccountPhoneWhereInput
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type AccountPhoneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    accountNumber?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    address1?: SortOrder
    address2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrder
    lastPaymentDate?: SortOrder
    lastPaymentAmount?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assignedAgentId?: SortOrder
    assignedDate?: SortOrder
    preferredContactMethod?: SortOrder
    bestTimeToCall?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    daysPastDue?: SortOrder
    lastContactDate?: SortOrder
    nextContactDate?: SortOrder
    contactAttempts?: SortOrder
    doNotCall?: SortOrder
    disputeFlag?: SortOrder
    bankruptcyFlag?: SortOrder
    deceasedFlag?: SortOrder
    notes?: SortOrder
    source?: SortOrder
    batchId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrder
    lastPaymentAmount?: SortOrder
    daysPastDue?: SortOrder
    contactAttempts?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    accountNumber?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    address1?: SortOrder
    address2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrder
    lastPaymentDate?: SortOrder
    lastPaymentAmount?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assignedAgentId?: SortOrder
    assignedDate?: SortOrder
    preferredContactMethod?: SortOrder
    bestTimeToCall?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    daysPastDue?: SortOrder
    lastContactDate?: SortOrder
    nextContactDate?: SortOrder
    contactAttempts?: SortOrder
    doNotCall?: SortOrder
    disputeFlag?: SortOrder
    bankruptcyFlag?: SortOrder
    deceasedFlag?: SortOrder
    notes?: SortOrder
    source?: SortOrder
    batchId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    accountNumber?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    address1?: SortOrder
    address2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrder
    lastPaymentDate?: SortOrder
    lastPaymentAmount?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assignedAgentId?: SortOrder
    assignedDate?: SortOrder
    preferredContactMethod?: SortOrder
    bestTimeToCall?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    daysPastDue?: SortOrder
    lastContactDate?: SortOrder
    nextContactDate?: SortOrder
    contactAttempts?: SortOrder
    doNotCall?: SortOrder
    disputeFlag?: SortOrder
    bankruptcyFlag?: SortOrder
    deceasedFlag?: SortOrder
    notes?: SortOrder
    source?: SortOrder
    batchId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    originalAmount?: SortOrder
    currentBalance?: SortOrder
    amountPaid?: SortOrder
    interestRate?: SortOrder
    lastPaymentAmount?: SortOrder
    daysPastDue?: SortOrder
    contactAttempts?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type AccountRelationFilter = {
    is?: AccountWhereInput
    isNot?: AccountWhereInput
  }

  export type AccountPhoneAccountIdPhoneNumberCompoundUniqueInput = {
    accountId: string
    phoneNumber: string
  }

  export type AccountPhoneCountOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    phoneNumber?: SortOrder
    phoneType?: SortOrder
    isValid?: SortOrder
    doNotCall?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountPhoneMaxOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    phoneNumber?: SortOrder
    phoneType?: SortOrder
    isValid?: SortOrder
    doNotCall?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountPhoneMinOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    phoneNumber?: SortOrder
    phoneType?: SortOrder
    isValid?: SortOrder
    doNotCall?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AccountPhoneNullableRelationFilter = {
    is?: AccountPhoneWhereInput | null
    isNot?: AccountPhoneWhereInput | null
  }

  export type CallCountOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    accountPhoneId?: SortOrder
    agentId?: SortOrder
    direction?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    disposition?: SortOrder
    notes?: SortOrder
    followUpDate?: SortOrder
    amountPromised?: SortOrder
    amountCollected?: SortOrder
    recordingPath?: SortOrder
    callerId?: SortOrder
    campaignId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CallAvgOrderByAggregateInput = {
    duration?: SortOrder
    amountPromised?: SortOrder
    amountCollected?: SortOrder
  }

  export type CallMaxOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    accountPhoneId?: SortOrder
    agentId?: SortOrder
    direction?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    disposition?: SortOrder
    notes?: SortOrder
    followUpDate?: SortOrder
    amountPromised?: SortOrder
    amountCollected?: SortOrder
    recordingPath?: SortOrder
    callerId?: SortOrder
    campaignId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CallMinOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    accountPhoneId?: SortOrder
    agentId?: SortOrder
    direction?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    disposition?: SortOrder
    notes?: SortOrder
    followUpDate?: SortOrder
    amountPromised?: SortOrder
    amountCollected?: SortOrder
    recordingPath?: SortOrder
    callerId?: SortOrder
    campaignId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CallSumOrderByAggregateInput = {
    duration?: SortOrder
    amountPromised?: SortOrder
    amountCollected?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type AccountActionCountOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    agentId?: SortOrder
    actionType?: SortOrder
    description?: SortOrder
    details?: SortOrder
    createdAt?: SortOrder
  }

  export type AccountActionMaxOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    agentId?: SortOrder
    actionType?: SortOrder
    description?: SortOrder
    details?: SortOrder
    createdAt?: SortOrder
  }

  export type AccountActionMinOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    agentId?: SortOrder
    actionType?: SortOrder
    description?: SortOrder
    details?: SortOrder
    createdAt?: SortOrder
  }

  export type UploadBatchCountOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    originalFilename?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    batchName?: SortOrder
    skipErrors?: SortOrder
    updateExisting?: SortOrder
    processingStarted?: SortOrder
    processingCompleted?: SortOrder
    errorLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UploadBatchAvgOrderByAggregateInput = {
    fileSize?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
  }

  export type UploadBatchMaxOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    originalFilename?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    batchName?: SortOrder
    skipErrors?: SortOrder
    updateExisting?: SortOrder
    processingStarted?: SortOrder
    processingCompleted?: SortOrder
    errorLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UploadBatchMinOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    originalFilename?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    batchName?: SortOrder
    skipErrors?: SortOrder
    updateExisting?: SortOrder
    processingStarted?: SortOrder
    processingCompleted?: SortOrder
    errorLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UploadBatchSumOrderByAggregateInput = {
    fileSize?: SortOrder
    totalRecords?: SortOrder
    processedRecords?: SortOrder
    successCount?: SortOrder
    errorCount?: SortOrder
    skipCount?: SortOrder
    duplicateCount?: SortOrder
  }

  export type AccountActionCreateNestedManyWithoutAgentInput = {
    create?: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput> | AccountActionCreateWithoutAgentInput[] | AccountActionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAgentInput | AccountActionCreateOrConnectWithoutAgentInput[]
    createMany?: AccountActionCreateManyAgentInputEnvelope
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutAssignedAgentInput = {
    create?: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput> | AccountCreateWithoutAssignedAgentInput[] | AccountUncheckedCreateWithoutAssignedAgentInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutAssignedAgentInput | AccountCreateOrConnectWithoutAssignedAgentInput[]
    createMany?: AccountCreateManyAssignedAgentInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type CallCreateNestedManyWithoutAgentInput = {
    create?: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput> | CallCreateWithoutAgentInput[] | CallUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAgentInput | CallCreateOrConnectWithoutAgentInput[]
    createMany?: CallCreateManyAgentInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UploadBatchCreateNestedManyWithoutUploadedByInput = {
    create?: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput> | UploadBatchCreateWithoutUploadedByInput[] | UploadBatchUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: UploadBatchCreateOrConnectWithoutUploadedByInput | UploadBatchCreateOrConnectWithoutUploadedByInput[]
    createMany?: UploadBatchCreateManyUploadedByInputEnvelope
    connect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
  }

  export type AccountActionUncheckedCreateNestedManyWithoutAgentInput = {
    create?: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput> | AccountActionCreateWithoutAgentInput[] | AccountActionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAgentInput | AccountActionCreateOrConnectWithoutAgentInput[]
    createMany?: AccountActionCreateManyAgentInputEnvelope
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutAssignedAgentInput = {
    create?: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput> | AccountCreateWithoutAssignedAgentInput[] | AccountUncheckedCreateWithoutAssignedAgentInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutAssignedAgentInput | AccountCreateOrConnectWithoutAssignedAgentInput[]
    createMany?: AccountCreateManyAssignedAgentInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type CallUncheckedCreateNestedManyWithoutAgentInput = {
    create?: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput> | CallCreateWithoutAgentInput[] | CallUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAgentInput | CallCreateOrConnectWithoutAgentInput[]
    createMany?: CallCreateManyAgentInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput = {
    create?: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput> | UploadBatchCreateWithoutUploadedByInput[] | UploadBatchUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: UploadBatchCreateOrConnectWithoutUploadedByInput | UploadBatchCreateOrConnectWithoutUploadedByInput[]
    createMany?: UploadBatchCreateManyUploadedByInputEnvelope
    connect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AccountActionUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput> | AccountActionCreateWithoutAgentInput[] | AccountActionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAgentInput | AccountActionCreateOrConnectWithoutAgentInput[]
    upsert?: AccountActionUpsertWithWhereUniqueWithoutAgentInput | AccountActionUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AccountActionCreateManyAgentInputEnvelope
    set?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    disconnect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    delete?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    update?: AccountActionUpdateWithWhereUniqueWithoutAgentInput | AccountActionUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AccountActionUpdateManyWithWhereWithoutAgentInput | AccountActionUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutAssignedAgentNestedInput = {
    create?: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput> | AccountCreateWithoutAssignedAgentInput[] | AccountUncheckedCreateWithoutAssignedAgentInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutAssignedAgentInput | AccountCreateOrConnectWithoutAssignedAgentInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutAssignedAgentInput | AccountUpsertWithWhereUniqueWithoutAssignedAgentInput[]
    createMany?: AccountCreateManyAssignedAgentInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutAssignedAgentInput | AccountUpdateWithWhereUniqueWithoutAssignedAgentInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutAssignedAgentInput | AccountUpdateManyWithWhereWithoutAssignedAgentInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type CallUpdateManyWithoutAgentNestedInput = {
    create?: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput> | CallCreateWithoutAgentInput[] | CallUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAgentInput | CallCreateOrConnectWithoutAgentInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAgentInput | CallUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: CallCreateManyAgentInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAgentInput | CallUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAgentInput | CallUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UploadBatchUpdateManyWithoutUploadedByNestedInput = {
    create?: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput> | UploadBatchCreateWithoutUploadedByInput[] | UploadBatchUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: UploadBatchCreateOrConnectWithoutUploadedByInput | UploadBatchCreateOrConnectWithoutUploadedByInput[]
    upsert?: UploadBatchUpsertWithWhereUniqueWithoutUploadedByInput | UploadBatchUpsertWithWhereUniqueWithoutUploadedByInput[]
    createMany?: UploadBatchCreateManyUploadedByInputEnvelope
    set?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    disconnect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    delete?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    connect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    update?: UploadBatchUpdateWithWhereUniqueWithoutUploadedByInput | UploadBatchUpdateWithWhereUniqueWithoutUploadedByInput[]
    updateMany?: UploadBatchUpdateManyWithWhereWithoutUploadedByInput | UploadBatchUpdateManyWithWhereWithoutUploadedByInput[]
    deleteMany?: UploadBatchScalarWhereInput | UploadBatchScalarWhereInput[]
  }

  export type AccountActionUncheckedUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput> | AccountActionCreateWithoutAgentInput[] | AccountActionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAgentInput | AccountActionCreateOrConnectWithoutAgentInput[]
    upsert?: AccountActionUpsertWithWhereUniqueWithoutAgentInput | AccountActionUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AccountActionCreateManyAgentInputEnvelope
    set?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    disconnect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    delete?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    update?: AccountActionUpdateWithWhereUniqueWithoutAgentInput | AccountActionUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AccountActionUpdateManyWithWhereWithoutAgentInput | AccountActionUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput = {
    create?: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput> | AccountCreateWithoutAssignedAgentInput[] | AccountUncheckedCreateWithoutAssignedAgentInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutAssignedAgentInput | AccountCreateOrConnectWithoutAssignedAgentInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutAssignedAgentInput | AccountUpsertWithWhereUniqueWithoutAssignedAgentInput[]
    createMany?: AccountCreateManyAssignedAgentInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutAssignedAgentInput | AccountUpdateWithWhereUniqueWithoutAssignedAgentInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutAssignedAgentInput | AccountUpdateManyWithWhereWithoutAssignedAgentInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type CallUncheckedUpdateManyWithoutAgentNestedInput = {
    create?: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput> | CallCreateWithoutAgentInput[] | CallUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAgentInput | CallCreateOrConnectWithoutAgentInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAgentInput | CallUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: CallCreateManyAgentInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAgentInput | CallUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAgentInput | CallUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput = {
    create?: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput> | UploadBatchCreateWithoutUploadedByInput[] | UploadBatchUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: UploadBatchCreateOrConnectWithoutUploadedByInput | UploadBatchCreateOrConnectWithoutUploadedByInput[]
    upsert?: UploadBatchUpsertWithWhereUniqueWithoutUploadedByInput | UploadBatchUpsertWithWhereUniqueWithoutUploadedByInput[]
    createMany?: UploadBatchCreateManyUploadedByInputEnvelope
    set?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    disconnect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    delete?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    connect?: UploadBatchWhereUniqueInput | UploadBatchWhereUniqueInput[]
    update?: UploadBatchUpdateWithWhereUniqueWithoutUploadedByInput | UploadBatchUpdateWithWhereUniqueWithoutUploadedByInput[]
    updateMany?: UploadBatchUpdateManyWithWhereWithoutUploadedByInput | UploadBatchUpdateManyWithWhereWithoutUploadedByInput[]
    deleteMany?: UploadBatchScalarWhereInput | UploadBatchScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type AccountActionCreateNestedManyWithoutAccountInput = {
    create?: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput> | AccountActionCreateWithoutAccountInput[] | AccountActionUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAccountInput | AccountActionCreateOrConnectWithoutAccountInput[]
    createMany?: AccountActionCreateManyAccountInputEnvelope
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
  }

  export type AccountPhoneCreateNestedManyWithoutAccountInput = {
    create?: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput> | AccountPhoneCreateWithoutAccountInput[] | AccountPhoneUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutAccountInput | AccountPhoneCreateOrConnectWithoutAccountInput[]
    createMany?: AccountPhoneCreateManyAccountInputEnvelope
    connect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutAssignedAccountsInput = {
    create?: XOR<UserCreateWithoutAssignedAccountsInput, UserUncheckedCreateWithoutAssignedAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type CallCreateNestedManyWithoutAccountInput = {
    create?: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput> | CallCreateWithoutAccountInput[] | CallUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountInput | CallCreateOrConnectWithoutAccountInput[]
    createMany?: CallCreateManyAccountInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type AccountActionUncheckedCreateNestedManyWithoutAccountInput = {
    create?: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput> | AccountActionCreateWithoutAccountInput[] | AccountActionUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAccountInput | AccountActionCreateOrConnectWithoutAccountInput[]
    createMany?: AccountActionCreateManyAccountInputEnvelope
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
  }

  export type AccountPhoneUncheckedCreateNestedManyWithoutAccountInput = {
    create?: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput> | AccountPhoneCreateWithoutAccountInput[] | AccountPhoneUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutAccountInput | AccountPhoneCreateOrConnectWithoutAccountInput[]
    createMany?: AccountPhoneCreateManyAccountInputEnvelope
    connect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
  }

  export type CallUncheckedCreateNestedManyWithoutAccountInput = {
    create?: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput> | CallCreateWithoutAccountInput[] | CallUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountInput | CallCreateOrConnectWithoutAccountInput[]
    createMany?: CallCreateManyAccountInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AccountActionUpdateManyWithoutAccountNestedInput = {
    create?: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput> | AccountActionCreateWithoutAccountInput[] | AccountActionUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAccountInput | AccountActionCreateOrConnectWithoutAccountInput[]
    upsert?: AccountActionUpsertWithWhereUniqueWithoutAccountInput | AccountActionUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: AccountActionCreateManyAccountInputEnvelope
    set?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    disconnect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    delete?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    update?: AccountActionUpdateWithWhereUniqueWithoutAccountInput | AccountActionUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: AccountActionUpdateManyWithWhereWithoutAccountInput | AccountActionUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
  }

  export type AccountPhoneUpdateManyWithoutAccountNestedInput = {
    create?: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput> | AccountPhoneCreateWithoutAccountInput[] | AccountPhoneUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutAccountInput | AccountPhoneCreateOrConnectWithoutAccountInput[]
    upsert?: AccountPhoneUpsertWithWhereUniqueWithoutAccountInput | AccountPhoneUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: AccountPhoneCreateManyAccountInputEnvelope
    set?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    disconnect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    delete?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    connect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    update?: AccountPhoneUpdateWithWhereUniqueWithoutAccountInput | AccountPhoneUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: AccountPhoneUpdateManyWithWhereWithoutAccountInput | AccountPhoneUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: AccountPhoneScalarWhereInput | AccountPhoneScalarWhereInput[]
  }

  export type UserUpdateOneWithoutAssignedAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAssignedAccountsInput, UserUncheckedCreateWithoutAssignedAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedAccountsInput
    upsert?: UserUpsertWithoutAssignedAccountsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedAccountsInput, UserUpdateWithoutAssignedAccountsInput>, UserUncheckedUpdateWithoutAssignedAccountsInput>
  }

  export type CallUpdateManyWithoutAccountNestedInput = {
    create?: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput> | CallCreateWithoutAccountInput[] | CallUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountInput | CallCreateOrConnectWithoutAccountInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAccountInput | CallUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: CallCreateManyAccountInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAccountInput | CallUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAccountInput | CallUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type AccountActionUncheckedUpdateManyWithoutAccountNestedInput = {
    create?: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput> | AccountActionCreateWithoutAccountInput[] | AccountActionUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountActionCreateOrConnectWithoutAccountInput | AccountActionCreateOrConnectWithoutAccountInput[]
    upsert?: AccountActionUpsertWithWhereUniqueWithoutAccountInput | AccountActionUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: AccountActionCreateManyAccountInputEnvelope
    set?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    disconnect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    delete?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    connect?: AccountActionWhereUniqueInput | AccountActionWhereUniqueInput[]
    update?: AccountActionUpdateWithWhereUniqueWithoutAccountInput | AccountActionUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: AccountActionUpdateManyWithWhereWithoutAccountInput | AccountActionUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
  }

  export type AccountPhoneUncheckedUpdateManyWithoutAccountNestedInput = {
    create?: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput> | AccountPhoneCreateWithoutAccountInput[] | AccountPhoneUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutAccountInput | AccountPhoneCreateOrConnectWithoutAccountInput[]
    upsert?: AccountPhoneUpsertWithWhereUniqueWithoutAccountInput | AccountPhoneUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: AccountPhoneCreateManyAccountInputEnvelope
    set?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    disconnect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    delete?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    connect?: AccountPhoneWhereUniqueInput | AccountPhoneWhereUniqueInput[]
    update?: AccountPhoneUpdateWithWhereUniqueWithoutAccountInput | AccountPhoneUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: AccountPhoneUpdateManyWithWhereWithoutAccountInput | AccountPhoneUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: AccountPhoneScalarWhereInput | AccountPhoneScalarWhereInput[]
  }

  export type CallUncheckedUpdateManyWithoutAccountNestedInput = {
    create?: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput> | CallCreateWithoutAccountInput[] | CallUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountInput | CallCreateOrConnectWithoutAccountInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAccountInput | CallUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: CallCreateManyAccountInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAccountInput | CallUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAccountInput | CallUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type AccountCreateNestedOneWithoutPhoneNumbersInput = {
    create?: XOR<AccountCreateWithoutPhoneNumbersInput, AccountUncheckedCreateWithoutPhoneNumbersInput>
    connectOrCreate?: AccountCreateOrConnectWithoutPhoneNumbersInput
    connect?: AccountWhereUniqueInput
  }

  export type CallCreateNestedManyWithoutAccountPhoneInput = {
    create?: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput> | CallCreateWithoutAccountPhoneInput[] | CallUncheckedCreateWithoutAccountPhoneInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountPhoneInput | CallCreateOrConnectWithoutAccountPhoneInput[]
    createMany?: CallCreateManyAccountPhoneInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type CallUncheckedCreateNestedManyWithoutAccountPhoneInput = {
    create?: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput> | CallCreateWithoutAccountPhoneInput[] | CallUncheckedCreateWithoutAccountPhoneInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountPhoneInput | CallCreateOrConnectWithoutAccountPhoneInput[]
    createMany?: CallCreateManyAccountPhoneInputEnvelope
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
  }

  export type AccountUpdateOneRequiredWithoutPhoneNumbersNestedInput = {
    create?: XOR<AccountCreateWithoutPhoneNumbersInput, AccountUncheckedCreateWithoutPhoneNumbersInput>
    connectOrCreate?: AccountCreateOrConnectWithoutPhoneNumbersInput
    upsert?: AccountUpsertWithoutPhoneNumbersInput
    connect?: AccountWhereUniqueInput
    update?: XOR<XOR<AccountUpdateToOneWithWhereWithoutPhoneNumbersInput, AccountUpdateWithoutPhoneNumbersInput>, AccountUncheckedUpdateWithoutPhoneNumbersInput>
  }

  export type CallUpdateManyWithoutAccountPhoneNestedInput = {
    create?: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput> | CallCreateWithoutAccountPhoneInput[] | CallUncheckedCreateWithoutAccountPhoneInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountPhoneInput | CallCreateOrConnectWithoutAccountPhoneInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAccountPhoneInput | CallUpsertWithWhereUniqueWithoutAccountPhoneInput[]
    createMany?: CallCreateManyAccountPhoneInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAccountPhoneInput | CallUpdateWithWhereUniqueWithoutAccountPhoneInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAccountPhoneInput | CallUpdateManyWithWhereWithoutAccountPhoneInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type CallUncheckedUpdateManyWithoutAccountPhoneNestedInput = {
    create?: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput> | CallCreateWithoutAccountPhoneInput[] | CallUncheckedCreateWithoutAccountPhoneInput[]
    connectOrCreate?: CallCreateOrConnectWithoutAccountPhoneInput | CallCreateOrConnectWithoutAccountPhoneInput[]
    upsert?: CallUpsertWithWhereUniqueWithoutAccountPhoneInput | CallUpsertWithWhereUniqueWithoutAccountPhoneInput[]
    createMany?: CallCreateManyAccountPhoneInputEnvelope
    set?: CallWhereUniqueInput | CallWhereUniqueInput[]
    disconnect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    delete?: CallWhereUniqueInput | CallWhereUniqueInput[]
    connect?: CallWhereUniqueInput | CallWhereUniqueInput[]
    update?: CallUpdateWithWhereUniqueWithoutAccountPhoneInput | CallUpdateWithWhereUniqueWithoutAccountPhoneInput[]
    updateMany?: CallUpdateManyWithWhereWithoutAccountPhoneInput | CallUpdateManyWithWhereWithoutAccountPhoneInput[]
    deleteMany?: CallScalarWhereInput | CallScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCallsInput = {
    create?: XOR<UserCreateWithoutCallsInput, UserUncheckedCreateWithoutCallsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCallsInput
    connect?: UserWhereUniqueInput
  }

  export type AccountPhoneCreateNestedOneWithoutCallsInput = {
    create?: XOR<AccountPhoneCreateWithoutCallsInput, AccountPhoneUncheckedCreateWithoutCallsInput>
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutCallsInput
    connect?: AccountPhoneWhereUniqueInput
  }

  export type AccountCreateNestedOneWithoutCallsInput = {
    create?: XOR<AccountCreateWithoutCallsInput, AccountUncheckedCreateWithoutCallsInput>
    connectOrCreate?: AccountCreateOrConnectWithoutCallsInput
    connect?: AccountWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutCallsNestedInput = {
    create?: XOR<UserCreateWithoutCallsInput, UserUncheckedCreateWithoutCallsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCallsInput
    upsert?: UserUpsertWithoutCallsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCallsInput, UserUpdateWithoutCallsInput>, UserUncheckedUpdateWithoutCallsInput>
  }

  export type AccountPhoneUpdateOneWithoutCallsNestedInput = {
    create?: XOR<AccountPhoneCreateWithoutCallsInput, AccountPhoneUncheckedCreateWithoutCallsInput>
    connectOrCreate?: AccountPhoneCreateOrConnectWithoutCallsInput
    upsert?: AccountPhoneUpsertWithoutCallsInput
    disconnect?: AccountPhoneWhereInput | boolean
    delete?: AccountPhoneWhereInput | boolean
    connect?: AccountPhoneWhereUniqueInput
    update?: XOR<XOR<AccountPhoneUpdateToOneWithWhereWithoutCallsInput, AccountPhoneUpdateWithoutCallsInput>, AccountPhoneUncheckedUpdateWithoutCallsInput>
  }

  export type AccountUpdateOneRequiredWithoutCallsNestedInput = {
    create?: XOR<AccountCreateWithoutCallsInput, AccountUncheckedCreateWithoutCallsInput>
    connectOrCreate?: AccountCreateOrConnectWithoutCallsInput
    upsert?: AccountUpsertWithoutCallsInput
    connect?: AccountWhereUniqueInput
    update?: XOR<XOR<AccountUpdateToOneWithWhereWithoutCallsInput, AccountUpdateWithoutCallsInput>, AccountUncheckedUpdateWithoutCallsInput>
  }

  export type UserCreateNestedOneWithoutAccountActionsInput = {
    create?: XOR<UserCreateWithoutAccountActionsInput, UserUncheckedCreateWithoutAccountActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountActionsInput
    connect?: UserWhereUniqueInput
  }

  export type AccountCreateNestedOneWithoutActionsInput = {
    create?: XOR<AccountCreateWithoutActionsInput, AccountUncheckedCreateWithoutActionsInput>
    connectOrCreate?: AccountCreateOrConnectWithoutActionsInput
    connect?: AccountWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAccountActionsNestedInput = {
    create?: XOR<UserCreateWithoutAccountActionsInput, UserUncheckedCreateWithoutAccountActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountActionsInput
    upsert?: UserUpsertWithoutAccountActionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountActionsInput, UserUpdateWithoutAccountActionsInput>, UserUncheckedUpdateWithoutAccountActionsInput>
  }

  export type AccountUpdateOneRequiredWithoutActionsNestedInput = {
    create?: XOR<AccountCreateWithoutActionsInput, AccountUncheckedCreateWithoutActionsInput>
    connectOrCreate?: AccountCreateOrConnectWithoutActionsInput
    upsert?: AccountUpsertWithoutActionsInput
    connect?: AccountWhereUniqueInput
    update?: XOR<XOR<AccountUpdateToOneWithWhereWithoutActionsInput, AccountUpdateWithoutActionsInput>, AccountUncheckedUpdateWithoutActionsInput>
  }

  export type UserCreateNestedOneWithoutUploadBatchesInput = {
    create?: XOR<UserCreateWithoutUploadBatchesInput, UserUncheckedCreateWithoutUploadBatchesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUploadBatchesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUploadBatchesNestedInput = {
    create?: XOR<UserCreateWithoutUploadBatchesInput, UserUncheckedCreateWithoutUploadBatchesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUploadBatchesInput
    upsert?: UserUpsertWithoutUploadBatchesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUploadBatchesInput, UserUpdateWithoutUploadBatchesInput>, UserUncheckedUpdateWithoutUploadBatchesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type AccountActionCreateWithoutAgentInput = {
    id?: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
    account: AccountCreateNestedOneWithoutActionsInput
  }

  export type AccountActionUncheckedCreateWithoutAgentInput = {
    id?: string
    accountId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountActionCreateOrConnectWithoutAgentInput = {
    where: AccountActionWhereUniqueInput
    create: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput>
  }

  export type AccountActionCreateManyAgentInputEnvelope = {
    data: AccountActionCreateManyAgentInput | AccountActionCreateManyAgentInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutAssignedAgentInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneCreateNestedManyWithoutAccountInput
    calls?: CallCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutAssignedAgentInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionUncheckedCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneUncheckedCreateNestedManyWithoutAccountInput
    calls?: CallUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutAssignedAgentInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput>
  }

  export type AccountCreateManyAssignedAgentInputEnvelope = {
    data: AccountCreateManyAssignedAgentInput | AccountCreateManyAssignedAgentInput[]
    skipDuplicates?: boolean
  }

  export type CallCreateWithoutAgentInput = {
    id?: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accountPhone?: AccountPhoneCreateNestedOneWithoutCallsInput
    account: AccountCreateNestedOneWithoutCallsInput
  }

  export type CallUncheckedCreateWithoutAgentInput = {
    id?: string
    accountId: string
    accountPhoneId?: string | null
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallCreateOrConnectWithoutAgentInput = {
    where: CallWhereUniqueInput
    create: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput>
  }

  export type CallCreateManyAgentInputEnvelope = {
    data: CallCreateManyAgentInput | CallCreateManyAgentInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UploadBatchCreateWithoutUploadedByInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UploadBatchUncheckedCreateWithoutUploadedByInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UploadBatchCreateOrConnectWithoutUploadedByInput = {
    where: UploadBatchWhereUniqueInput
    create: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput>
  }

  export type UploadBatchCreateManyUploadedByInputEnvelope = {
    data: UploadBatchCreateManyUploadedByInput | UploadBatchCreateManyUploadedByInput[]
    skipDuplicates?: boolean
  }

  export type AccountActionUpsertWithWhereUniqueWithoutAgentInput = {
    where: AccountActionWhereUniqueInput
    update: XOR<AccountActionUpdateWithoutAgentInput, AccountActionUncheckedUpdateWithoutAgentInput>
    create: XOR<AccountActionCreateWithoutAgentInput, AccountActionUncheckedCreateWithoutAgentInput>
  }

  export type AccountActionUpdateWithWhereUniqueWithoutAgentInput = {
    where: AccountActionWhereUniqueInput
    data: XOR<AccountActionUpdateWithoutAgentInput, AccountActionUncheckedUpdateWithoutAgentInput>
  }

  export type AccountActionUpdateManyWithWhereWithoutAgentInput = {
    where: AccountActionScalarWhereInput
    data: XOR<AccountActionUpdateManyMutationInput, AccountActionUncheckedUpdateManyWithoutAgentInput>
  }

  export type AccountActionScalarWhereInput = {
    AND?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
    OR?: AccountActionScalarWhereInput[]
    NOT?: AccountActionScalarWhereInput | AccountActionScalarWhereInput[]
    id?: StringFilter<"AccountAction"> | string
    accountId?: StringFilter<"AccountAction"> | string
    agentId?: StringFilter<"AccountAction"> | string
    actionType?: StringFilter<"AccountAction"> | string
    description?: StringFilter<"AccountAction"> | string
    details?: StringNullableFilter<"AccountAction"> | string | null
    createdAt?: DateTimeFilter<"AccountAction"> | Date | string
  }

  export type AccountUpsertWithWhereUniqueWithoutAssignedAgentInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutAssignedAgentInput, AccountUncheckedUpdateWithoutAssignedAgentInput>
    create: XOR<AccountCreateWithoutAssignedAgentInput, AccountUncheckedCreateWithoutAssignedAgentInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutAssignedAgentInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutAssignedAgentInput, AccountUncheckedUpdateWithoutAssignedAgentInput>
  }

  export type AccountUpdateManyWithWhereWithoutAssignedAgentInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutAssignedAgentInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    accountNumber?: StringFilter<"Account"> | string
    firstName?: StringFilter<"Account"> | string
    lastName?: StringFilter<"Account"> | string
    fullName?: StringFilter<"Account"> | string
    email?: StringNullableFilter<"Account"> | string | null
    address1?: StringNullableFilter<"Account"> | string | null
    address2?: StringNullableFilter<"Account"> | string | null
    city?: StringNullableFilter<"Account"> | string | null
    state?: StringNullableFilter<"Account"> | string | null
    zipCode?: StringNullableFilter<"Account"> | string | null
    country?: StringNullableFilter<"Account"> | string | null
    originalAmount?: FloatFilter<"Account"> | number
    currentBalance?: FloatFilter<"Account"> | number
    amountPaid?: FloatFilter<"Account"> | number
    interestRate?: FloatNullableFilter<"Account"> | number | null
    lastPaymentDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    lastPaymentAmount?: FloatNullableFilter<"Account"> | number | null
    status?: StringFilter<"Account"> | string
    priority?: StringFilter<"Account"> | string
    assignedAgentId?: StringNullableFilter<"Account"> | string | null
    assignedDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    preferredContactMethod?: StringNullableFilter<"Account"> | string | null
    bestTimeToCall?: StringNullableFilter<"Account"> | string | null
    timezone?: StringNullableFilter<"Account"> | string | null
    language?: StringNullableFilter<"Account"> | string | null
    daysPastDue?: IntFilter<"Account"> | number
    lastContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    nextContactDate?: DateTimeNullableFilter<"Account"> | Date | string | null
    contactAttempts?: IntFilter<"Account"> | number
    doNotCall?: BoolFilter<"Account"> | boolean
    disputeFlag?: BoolFilter<"Account"> | boolean
    bankruptcyFlag?: BoolFilter<"Account"> | boolean
    deceasedFlag?: BoolFilter<"Account"> | boolean
    notes?: StringNullableFilter<"Account"> | string | null
    source?: StringNullableFilter<"Account"> | string | null
    batchId?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type CallUpsertWithWhereUniqueWithoutAgentInput = {
    where: CallWhereUniqueInput
    update: XOR<CallUpdateWithoutAgentInput, CallUncheckedUpdateWithoutAgentInput>
    create: XOR<CallCreateWithoutAgentInput, CallUncheckedCreateWithoutAgentInput>
  }

  export type CallUpdateWithWhereUniqueWithoutAgentInput = {
    where: CallWhereUniqueInput
    data: XOR<CallUpdateWithoutAgentInput, CallUncheckedUpdateWithoutAgentInput>
  }

  export type CallUpdateManyWithWhereWithoutAgentInput = {
    where: CallScalarWhereInput
    data: XOR<CallUpdateManyMutationInput, CallUncheckedUpdateManyWithoutAgentInput>
  }

  export type CallScalarWhereInput = {
    AND?: CallScalarWhereInput | CallScalarWhereInput[]
    OR?: CallScalarWhereInput[]
    NOT?: CallScalarWhereInput | CallScalarWhereInput[]
    id?: StringFilter<"Call"> | string
    accountId?: StringFilter<"Call"> | string
    accountPhoneId?: StringNullableFilter<"Call"> | string | null
    agentId?: StringFilter<"Call"> | string
    direction?: StringFilter<"Call"> | string
    startTime?: DateTimeFilter<"Call"> | Date | string
    endTime?: DateTimeNullableFilter<"Call"> | Date | string | null
    duration?: IntNullableFilter<"Call"> | number | null
    status?: StringFilter<"Call"> | string
    disposition?: StringNullableFilter<"Call"> | string | null
    notes?: StringNullableFilter<"Call"> | string | null
    followUpDate?: DateTimeNullableFilter<"Call"> | Date | string | null
    amountPromised?: FloatNullableFilter<"Call"> | number | null
    amountCollected?: FloatNullableFilter<"Call"> | number | null
    recordingPath?: StringNullableFilter<"Call"> | string | null
    callerId?: StringNullableFilter<"Call"> | string | null
    campaignId?: StringNullableFilter<"Call"> | string | null
    createdAt?: DateTimeFilter<"Call"> | Date | string
    updatedAt?: DateTimeFilter<"Call"> | Date | string
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type UploadBatchUpsertWithWhereUniqueWithoutUploadedByInput = {
    where: UploadBatchWhereUniqueInput
    update: XOR<UploadBatchUpdateWithoutUploadedByInput, UploadBatchUncheckedUpdateWithoutUploadedByInput>
    create: XOR<UploadBatchCreateWithoutUploadedByInput, UploadBatchUncheckedCreateWithoutUploadedByInput>
  }

  export type UploadBatchUpdateWithWhereUniqueWithoutUploadedByInput = {
    where: UploadBatchWhereUniqueInput
    data: XOR<UploadBatchUpdateWithoutUploadedByInput, UploadBatchUncheckedUpdateWithoutUploadedByInput>
  }

  export type UploadBatchUpdateManyWithWhereWithoutUploadedByInput = {
    where: UploadBatchScalarWhereInput
    data: XOR<UploadBatchUpdateManyMutationInput, UploadBatchUncheckedUpdateManyWithoutUploadedByInput>
  }

  export type UploadBatchScalarWhereInput = {
    AND?: UploadBatchScalarWhereInput | UploadBatchScalarWhereInput[]
    OR?: UploadBatchScalarWhereInput[]
    NOT?: UploadBatchScalarWhereInput | UploadBatchScalarWhereInput[]
    id?: StringFilter<"UploadBatch"> | string
    filename?: StringFilter<"UploadBatch"> | string
    originalFilename?: StringFilter<"UploadBatch"> | string
    fileSize?: IntFilter<"UploadBatch"> | number
    mimeType?: StringFilter<"UploadBatch"> | string
    totalRecords?: IntFilter<"UploadBatch"> | number
    processedRecords?: IntFilter<"UploadBatch"> | number
    successCount?: IntFilter<"UploadBatch"> | number
    errorCount?: IntFilter<"UploadBatch"> | number
    skipCount?: IntFilter<"UploadBatch"> | number
    duplicateCount?: IntFilter<"UploadBatch"> | number
    status?: StringFilter<"UploadBatch"> | string
    uploadedById?: StringFilter<"UploadBatch"> | string
    batchName?: StringNullableFilter<"UploadBatch"> | string | null
    skipErrors?: BoolFilter<"UploadBatch"> | boolean
    updateExisting?: BoolFilter<"UploadBatch"> | boolean
    processingStarted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    processingCompleted?: DateTimeNullableFilter<"UploadBatch"> | Date | string | null
    errorLog?: StringNullableFilter<"UploadBatch"> | string | null
    createdAt?: DateTimeFilter<"UploadBatch"> | Date | string
    updatedAt?: DateTimeFilter<"UploadBatch"> | Date | string
  }

  export type UserCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountCreateNestedManyWithoutAssignedAgentInput
    calls?: CallCreateNestedManyWithoutAgentInput
    uploadBatches?: UploadBatchCreateNestedManyWithoutUploadedByInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionUncheckedCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountUncheckedCreateNestedManyWithoutAssignedAgentInput
    calls?: CallUncheckedCreateNestedManyWithoutAgentInput
    uploadBatches?: UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUpdateManyWithoutAgentNestedInput
    uploadBatches?: UploadBatchUpdateManyWithoutUploadedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUncheckedUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUncheckedUpdateManyWithoutAgentNestedInput
    uploadBatches?: UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput
  }

  export type AccountActionCreateWithoutAccountInput = {
    id?: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
    agent: UserCreateNestedOneWithoutAccountActionsInput
  }

  export type AccountActionUncheckedCreateWithoutAccountInput = {
    id?: string
    agentId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountActionCreateOrConnectWithoutAccountInput = {
    where: AccountActionWhereUniqueInput
    create: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput>
  }

  export type AccountActionCreateManyAccountInputEnvelope = {
    data: AccountActionCreateManyAccountInput | AccountActionCreateManyAccountInput[]
    skipDuplicates?: boolean
  }

  export type AccountPhoneCreateWithoutAccountInput = {
    id?: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calls?: CallCreateNestedManyWithoutAccountPhoneInput
  }

  export type AccountPhoneUncheckedCreateWithoutAccountInput = {
    id?: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calls?: CallUncheckedCreateNestedManyWithoutAccountPhoneInput
  }

  export type AccountPhoneCreateOrConnectWithoutAccountInput = {
    where: AccountPhoneWhereUniqueInput
    create: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput>
  }

  export type AccountPhoneCreateManyAccountInputEnvelope = {
    data: AccountPhoneCreateManyAccountInput | AccountPhoneCreateManyAccountInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAssignedAccountsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionCreateNestedManyWithoutAgentInput
    calls?: CallCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchCreateNestedManyWithoutUploadedByInput
  }

  export type UserUncheckedCreateWithoutAssignedAccountsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionUncheckedCreateNestedManyWithoutAgentInput
    calls?: CallUncheckedCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput
  }

  export type UserCreateOrConnectWithoutAssignedAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedAccountsInput, UserUncheckedCreateWithoutAssignedAccountsInput>
  }

  export type CallCreateWithoutAccountInput = {
    id?: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agent: UserCreateNestedOneWithoutCallsInput
    accountPhone?: AccountPhoneCreateNestedOneWithoutCallsInput
  }

  export type CallUncheckedCreateWithoutAccountInput = {
    id?: string
    accountPhoneId?: string | null
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallCreateOrConnectWithoutAccountInput = {
    where: CallWhereUniqueInput
    create: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput>
  }

  export type CallCreateManyAccountInputEnvelope = {
    data: CallCreateManyAccountInput | CallCreateManyAccountInput[]
    skipDuplicates?: boolean
  }

  export type AccountActionUpsertWithWhereUniqueWithoutAccountInput = {
    where: AccountActionWhereUniqueInput
    update: XOR<AccountActionUpdateWithoutAccountInput, AccountActionUncheckedUpdateWithoutAccountInput>
    create: XOR<AccountActionCreateWithoutAccountInput, AccountActionUncheckedCreateWithoutAccountInput>
  }

  export type AccountActionUpdateWithWhereUniqueWithoutAccountInput = {
    where: AccountActionWhereUniqueInput
    data: XOR<AccountActionUpdateWithoutAccountInput, AccountActionUncheckedUpdateWithoutAccountInput>
  }

  export type AccountActionUpdateManyWithWhereWithoutAccountInput = {
    where: AccountActionScalarWhereInput
    data: XOR<AccountActionUpdateManyMutationInput, AccountActionUncheckedUpdateManyWithoutAccountInput>
  }

  export type AccountPhoneUpsertWithWhereUniqueWithoutAccountInput = {
    where: AccountPhoneWhereUniqueInput
    update: XOR<AccountPhoneUpdateWithoutAccountInput, AccountPhoneUncheckedUpdateWithoutAccountInput>
    create: XOR<AccountPhoneCreateWithoutAccountInput, AccountPhoneUncheckedCreateWithoutAccountInput>
  }

  export type AccountPhoneUpdateWithWhereUniqueWithoutAccountInput = {
    where: AccountPhoneWhereUniqueInput
    data: XOR<AccountPhoneUpdateWithoutAccountInput, AccountPhoneUncheckedUpdateWithoutAccountInput>
  }

  export type AccountPhoneUpdateManyWithWhereWithoutAccountInput = {
    where: AccountPhoneScalarWhereInput
    data: XOR<AccountPhoneUpdateManyMutationInput, AccountPhoneUncheckedUpdateManyWithoutAccountInput>
  }

  export type AccountPhoneScalarWhereInput = {
    AND?: AccountPhoneScalarWhereInput | AccountPhoneScalarWhereInput[]
    OR?: AccountPhoneScalarWhereInput[]
    NOT?: AccountPhoneScalarWhereInput | AccountPhoneScalarWhereInput[]
    id?: StringFilter<"AccountPhone"> | string
    accountId?: StringFilter<"AccountPhone"> | string
    phoneNumber?: StringFilter<"AccountPhone"> | string
    phoneType?: StringFilter<"AccountPhone"> | string
    isValid?: BoolFilter<"AccountPhone"> | boolean
    doNotCall?: BoolFilter<"AccountPhone"> | boolean
    notes?: StringNullableFilter<"AccountPhone"> | string | null
    createdAt?: DateTimeFilter<"AccountPhone"> | Date | string
    updatedAt?: DateTimeFilter<"AccountPhone"> | Date | string
  }

  export type UserUpsertWithoutAssignedAccountsInput = {
    update: XOR<UserUpdateWithoutAssignedAccountsInput, UserUncheckedUpdateWithoutAssignedAccountsInput>
    create: XOR<UserCreateWithoutAssignedAccountsInput, UserUncheckedCreateWithoutAssignedAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedAccountsInput, UserUncheckedUpdateWithoutAssignedAccountsInput>
  }

  export type UserUpdateWithoutAssignedAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUpdateManyWithoutAgentNestedInput
    calls?: CallUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUpdateManyWithoutUploadedByNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUncheckedUpdateManyWithoutAgentNestedInput
    calls?: CallUncheckedUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput
  }

  export type CallUpsertWithWhereUniqueWithoutAccountInput = {
    where: CallWhereUniqueInput
    update: XOR<CallUpdateWithoutAccountInput, CallUncheckedUpdateWithoutAccountInput>
    create: XOR<CallCreateWithoutAccountInput, CallUncheckedCreateWithoutAccountInput>
  }

  export type CallUpdateWithWhereUniqueWithoutAccountInput = {
    where: CallWhereUniqueInput
    data: XOR<CallUpdateWithoutAccountInput, CallUncheckedUpdateWithoutAccountInput>
  }

  export type CallUpdateManyWithWhereWithoutAccountInput = {
    where: CallScalarWhereInput
    data: XOR<CallUpdateManyMutationInput, CallUncheckedUpdateManyWithoutAccountInput>
  }

  export type AccountCreateWithoutPhoneNumbersInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionCreateNestedManyWithoutAccountInput
    assignedAgent?: UserCreateNestedOneWithoutAssignedAccountsInput
    calls?: CallCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutPhoneNumbersInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedAgentId?: string | null
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionUncheckedCreateNestedManyWithoutAccountInput
    calls?: CallUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutPhoneNumbersInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutPhoneNumbersInput, AccountUncheckedCreateWithoutPhoneNumbersInput>
  }

  export type CallCreateWithoutAccountPhoneInput = {
    id?: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agent: UserCreateNestedOneWithoutCallsInput
    account: AccountCreateNestedOneWithoutCallsInput
  }

  export type CallUncheckedCreateWithoutAccountPhoneInput = {
    id?: string
    accountId: string
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallCreateOrConnectWithoutAccountPhoneInput = {
    where: CallWhereUniqueInput
    create: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput>
  }

  export type CallCreateManyAccountPhoneInputEnvelope = {
    data: CallCreateManyAccountPhoneInput | CallCreateManyAccountPhoneInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithoutPhoneNumbersInput = {
    update: XOR<AccountUpdateWithoutPhoneNumbersInput, AccountUncheckedUpdateWithoutPhoneNumbersInput>
    create: XOR<AccountCreateWithoutPhoneNumbersInput, AccountUncheckedCreateWithoutPhoneNumbersInput>
    where?: AccountWhereInput
  }

  export type AccountUpdateToOneWithWhereWithoutPhoneNumbersInput = {
    where?: AccountWhereInput
    data: XOR<AccountUpdateWithoutPhoneNumbersInput, AccountUncheckedUpdateWithoutPhoneNumbersInput>
  }

  export type AccountUpdateWithoutPhoneNumbersInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUpdateManyWithoutAccountNestedInput
    assignedAgent?: UserUpdateOneWithoutAssignedAccountsNestedInput
    calls?: CallUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutPhoneNumbersInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedAgentId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUncheckedUpdateManyWithoutAccountNestedInput
    calls?: CallUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type CallUpsertWithWhereUniqueWithoutAccountPhoneInput = {
    where: CallWhereUniqueInput
    update: XOR<CallUpdateWithoutAccountPhoneInput, CallUncheckedUpdateWithoutAccountPhoneInput>
    create: XOR<CallCreateWithoutAccountPhoneInput, CallUncheckedCreateWithoutAccountPhoneInput>
  }

  export type CallUpdateWithWhereUniqueWithoutAccountPhoneInput = {
    where: CallWhereUniqueInput
    data: XOR<CallUpdateWithoutAccountPhoneInput, CallUncheckedUpdateWithoutAccountPhoneInput>
  }

  export type CallUpdateManyWithWhereWithoutAccountPhoneInput = {
    where: CallScalarWhereInput
    data: XOR<CallUpdateManyMutationInput, CallUncheckedUpdateManyWithoutAccountPhoneInput>
  }

  export type UserCreateWithoutCallsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountCreateNestedManyWithoutAssignedAgentInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchCreateNestedManyWithoutUploadedByInput
  }

  export type UserUncheckedCreateWithoutCallsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionUncheckedCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountUncheckedCreateNestedManyWithoutAssignedAgentInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput
  }

  export type UserCreateOrConnectWithoutCallsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCallsInput, UserUncheckedCreateWithoutCallsInput>
  }

  export type AccountPhoneCreateWithoutCallsInput = {
    id?: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    account: AccountCreateNestedOneWithoutPhoneNumbersInput
  }

  export type AccountPhoneUncheckedCreateWithoutCallsInput = {
    id?: string
    accountId: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountPhoneCreateOrConnectWithoutCallsInput = {
    where: AccountPhoneWhereUniqueInput
    create: XOR<AccountPhoneCreateWithoutCallsInput, AccountPhoneUncheckedCreateWithoutCallsInput>
  }

  export type AccountCreateWithoutCallsInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneCreateNestedManyWithoutAccountInput
    assignedAgent?: UserCreateNestedOneWithoutAssignedAccountsInput
  }

  export type AccountUncheckedCreateWithoutCallsInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedAgentId?: string | null
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    actions?: AccountActionUncheckedCreateNestedManyWithoutAccountInput
    phoneNumbers?: AccountPhoneUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutCallsInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutCallsInput, AccountUncheckedCreateWithoutCallsInput>
  }

  export type UserUpsertWithoutCallsInput = {
    update: XOR<UserUpdateWithoutCallsInput, UserUncheckedUpdateWithoutCallsInput>
    create: XOR<UserCreateWithoutCallsInput, UserUncheckedCreateWithoutCallsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCallsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCallsInput, UserUncheckedUpdateWithoutCallsInput>
  }

  export type UserUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUpdateManyWithoutAssignedAgentNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUpdateManyWithoutUploadedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUncheckedUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput
  }

  export type AccountPhoneUpsertWithoutCallsInput = {
    update: XOR<AccountPhoneUpdateWithoutCallsInput, AccountPhoneUncheckedUpdateWithoutCallsInput>
    create: XOR<AccountPhoneCreateWithoutCallsInput, AccountPhoneUncheckedCreateWithoutCallsInput>
    where?: AccountPhoneWhereInput
  }

  export type AccountPhoneUpdateToOneWithWhereWithoutCallsInput = {
    where?: AccountPhoneWhereInput
    data: XOR<AccountPhoneUpdateWithoutCallsInput, AccountPhoneUncheckedUpdateWithoutCallsInput>
  }

  export type AccountPhoneUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: AccountUpdateOneRequiredWithoutPhoneNumbersNestedInput
  }

  export type AccountPhoneUncheckedUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUpsertWithoutCallsInput = {
    update: XOR<AccountUpdateWithoutCallsInput, AccountUncheckedUpdateWithoutCallsInput>
    create: XOR<AccountCreateWithoutCallsInput, AccountUncheckedCreateWithoutCallsInput>
    where?: AccountWhereInput
  }

  export type AccountUpdateToOneWithWhereWithoutCallsInput = {
    where?: AccountWhereInput
    data: XOR<AccountUpdateWithoutCallsInput, AccountUncheckedUpdateWithoutCallsInput>
  }

  export type AccountUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUpdateManyWithoutAccountNestedInput
    assignedAgent?: UserUpdateOneWithoutAssignedAccountsNestedInput
  }

  export type AccountUncheckedUpdateWithoutCallsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedAgentId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUncheckedUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type UserCreateWithoutAccountActionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    assignedAccounts?: AccountCreateNestedManyWithoutAssignedAgentInput
    calls?: CallCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchCreateNestedManyWithoutUploadedByInput
  }

  export type UserUncheckedCreateWithoutAccountActionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    assignedAccounts?: AccountUncheckedCreateNestedManyWithoutAssignedAgentInput
    calls?: CallUncheckedCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    uploadBatches?: UploadBatchUncheckedCreateNestedManyWithoutUploadedByInput
  }

  export type UserCreateOrConnectWithoutAccountActionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountActionsInput, UserUncheckedCreateWithoutAccountActionsInput>
  }

  export type AccountCreateWithoutActionsInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    phoneNumbers?: AccountPhoneCreateNestedManyWithoutAccountInput
    assignedAgent?: UserCreateNestedOneWithoutAssignedAccountsInput
    calls?: CallCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutActionsInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedAgentId?: string | null
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    phoneNumbers?: AccountPhoneUncheckedCreateNestedManyWithoutAccountInput
    calls?: CallUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutActionsInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutActionsInput, AccountUncheckedCreateWithoutActionsInput>
  }

  export type UserUpsertWithoutAccountActionsInput = {
    update: XOR<UserUpdateWithoutAccountActionsInput, UserUncheckedUpdateWithoutAccountActionsInput>
    create: XOR<UserCreateWithoutAccountActionsInput, UserUncheckedCreateWithoutAccountActionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountActionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountActionsInput, UserUncheckedUpdateWithoutAccountActionsInput>
  }

  export type UserUpdateWithoutAccountActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    assignedAccounts?: AccountUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUpdateManyWithoutUploadedByNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    assignedAccounts?: AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUncheckedUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    uploadBatches?: UploadBatchUncheckedUpdateManyWithoutUploadedByNestedInput
  }

  export type AccountUpsertWithoutActionsInput = {
    update: XOR<AccountUpdateWithoutActionsInput, AccountUncheckedUpdateWithoutActionsInput>
    create: XOR<AccountCreateWithoutActionsInput, AccountUncheckedCreateWithoutActionsInput>
    where?: AccountWhereInput
  }

  export type AccountUpdateToOneWithWhereWithoutActionsInput = {
    where?: AccountWhereInput
    data: XOR<AccountUpdateWithoutActionsInput, AccountUncheckedUpdateWithoutActionsInput>
  }

  export type AccountUpdateWithoutActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    phoneNumbers?: AccountPhoneUpdateManyWithoutAccountNestedInput
    assignedAgent?: UserUpdateOneWithoutAssignedAccountsNestedInput
    calls?: CallUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedAgentId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    phoneNumbers?: AccountPhoneUncheckedUpdateManyWithoutAccountNestedInput
    calls?: CallUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type UserCreateWithoutUploadBatchesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountCreateNestedManyWithoutAssignedAgentInput
    calls?: CallCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUploadBatchesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    role?: string
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    emailVerified?: boolean
    emailVerifyToken?: string | null
    emailVerifyExpires?: Date | string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    failedLoginAttempts?: number
    accountLockedUntil?: Date | string | null
    lastFailedLogin?: Date | string | null
    passwordChangedAt?: Date | string
    mustChangePassword?: boolean
    accountActions?: AccountActionUncheckedCreateNestedManyWithoutAgentInput
    assignedAccounts?: AccountUncheckedCreateNestedManyWithoutAssignedAgentInput
    calls?: CallUncheckedCreateNestedManyWithoutAgentInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUploadBatchesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUploadBatchesInput, UserUncheckedCreateWithoutUploadBatchesInput>
  }

  export type UserUpsertWithoutUploadBatchesInput = {
    update: XOR<UserUpdateWithoutUploadBatchesInput, UserUncheckedUpdateWithoutUploadBatchesInput>
    create: XOR<UserCreateWithoutUploadBatchesInput, UserUncheckedCreateWithoutUploadBatchesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUploadBatchesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUploadBatchesInput, UserUncheckedUpdateWithoutUploadBatchesInput>
  }

  export type UserUpdateWithoutUploadBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUploadBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifyExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    accountLockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastFailedLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordChangedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    accountActions?: AccountActionUncheckedUpdateManyWithoutAgentNestedInput
    assignedAccounts?: AccountUncheckedUpdateManyWithoutAssignedAgentNestedInput
    calls?: CallUncheckedUpdateManyWithoutAgentNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AccountActionCreateManyAgentInput = {
    id?: string
    accountId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountCreateManyAssignedAgentInput = {
    id?: string
    accountNumber: string
    firstName: string
    lastName: string
    fullName: string
    email?: string | null
    address1?: string | null
    address2?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    originalAmount: number
    currentBalance: number
    amountPaid?: number
    interestRate?: number | null
    lastPaymentDate?: Date | string | null
    lastPaymentAmount?: number | null
    status?: string
    priority?: string
    assignedDate?: Date | string | null
    preferredContactMethod?: string | null
    bestTimeToCall?: string | null
    timezone?: string | null
    language?: string | null
    daysPastDue?: number
    lastContactDate?: Date | string | null
    nextContactDate?: Date | string | null
    contactAttempts?: number
    doNotCall?: boolean
    disputeFlag?: boolean
    bankruptcyFlag?: boolean
    deceasedFlag?: boolean
    notes?: string | null
    source?: string | null
    batchId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallCreateManyAgentInput = {
    id?: string
    accountId: string
    accountPhoneId?: string | null
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type UploadBatchCreateManyUploadedByInput = {
    id?: string
    filename: string
    originalFilename: string
    fileSize: number
    mimeType: string
    totalRecords?: number
    processedRecords?: number
    successCount?: number
    errorCount?: number
    skipCount?: number
    duplicateCount?: number
    status?: string
    batchName?: string | null
    skipErrors?: boolean
    updateExisting?: boolean
    processingStarted?: Date | string | null
    processingCompleted?: Date | string | null
    errorLog?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountActionUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    account?: AccountUpdateOneRequiredWithoutActionsNestedInput
  }

  export type AccountActionUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionUncheckedUpdateManyWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUpdateWithoutAssignedAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUpdateManyWithoutAccountNestedInput
    calls?: CallUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutAssignedAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actions?: AccountActionUncheckedUpdateManyWithoutAccountNestedInput
    phoneNumbers?: AccountPhoneUncheckedUpdateManyWithoutAccountNestedInput
    calls?: CallUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateManyWithoutAssignedAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address1?: NullableStringFieldUpdateOperationsInput | string | null
    address2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    originalAmount?: FloatFieldUpdateOperationsInput | number
    currentBalance?: FloatFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    lastPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastPaymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    assignedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredContactMethod?: NullableStringFieldUpdateOperationsInput | string | null
    bestTimeToCall?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    daysPastDue?: IntFieldUpdateOperationsInput | number
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactAttempts?: IntFieldUpdateOperationsInput | number
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    disputeFlag?: BoolFieldUpdateOperationsInput | boolean
    bankruptcyFlag?: BoolFieldUpdateOperationsInput | boolean
    deceasedFlag?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    batchId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accountPhone?: AccountPhoneUpdateOneWithoutCallsNestedInput
    account?: AccountUpdateOneRequiredWithoutCallsNestedInput
  }

  export type CallUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUncheckedUpdateManyWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchUpdateWithoutUploadedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchUncheckedUpdateWithoutUploadedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UploadBatchUncheckedUpdateManyWithoutUploadedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalFilename?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    totalRecords?: IntFieldUpdateOperationsInput | number
    processedRecords?: IntFieldUpdateOperationsInput | number
    successCount?: IntFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    skipCount?: IntFieldUpdateOperationsInput | number
    duplicateCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    batchName?: NullableStringFieldUpdateOperationsInput | string | null
    skipErrors?: BoolFieldUpdateOperationsInput | boolean
    updateExisting?: BoolFieldUpdateOperationsInput | boolean
    processingStarted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    processingCompleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorLog?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionCreateManyAccountInput = {
    id?: string
    agentId: string
    actionType: string
    description: string
    details?: string | null
    createdAt?: Date | string
  }

  export type AccountPhoneCreateManyAccountInput = {
    id?: string
    phoneNumber: string
    phoneType?: string
    isValid?: boolean
    doNotCall?: boolean
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallCreateManyAccountInput = {
    id?: string
    accountPhoneId?: string | null
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountActionUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: UserUpdateOneRequiredWithoutAccountActionsNestedInput
  }

  export type AccountActionUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountActionUncheckedUpdateManyWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    actionType?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountPhoneUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calls?: CallUpdateManyWithoutAccountPhoneNestedInput
  }

  export type AccountPhoneUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calls?: CallUncheckedUpdateManyWithoutAccountPhoneNestedInput
  }

  export type AccountPhoneUncheckedUpdateManyWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    phoneType?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    doNotCall?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: UserUpdateOneRequiredWithoutCallsNestedInput
    accountPhone?: AccountPhoneUpdateOneWithoutCallsNestedInput
  }

  export type CallUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUncheckedUpdateManyWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountPhoneId?: NullableStringFieldUpdateOperationsInput | string | null
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallCreateManyAccountPhoneInput = {
    id?: string
    accountId: string
    agentId: string
    direction: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    status: string
    disposition?: string | null
    notes?: string | null
    followUpDate?: Date | string | null
    amountPromised?: number | null
    amountCollected?: number | null
    recordingPath?: string | null
    callerId?: string | null
    campaignId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CallUpdateWithoutAccountPhoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: UserUpdateOneRequiredWithoutCallsNestedInput
    account?: AccountUpdateOneRequiredWithoutCallsNestedInput
  }

  export type CallUncheckedUpdateWithoutAccountPhoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CallUncheckedUpdateManyWithoutAccountPhoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    disposition?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    amountPromised?: NullableFloatFieldUpdateOperationsInput | number | null
    amountCollected?: NullableFloatFieldUpdateOperationsInput | number | null
    recordingPath?: NullableStringFieldUpdateOperationsInput | string | null
    callerId?: NullableStringFieldUpdateOperationsInput | string | null
    campaignId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountCountOutputTypeDefaultArgs instead
     */
    export type AccountCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountPhoneCountOutputTypeDefaultArgs instead
     */
    export type AccountPhoneCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountPhoneCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RefreshTokenDefaultArgs instead
     */
    export type RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountDefaultArgs instead
     */
    export type AccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountPhoneDefaultArgs instead
     */
    export type AccountPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountPhoneDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CallDefaultArgs instead
     */
    export type CallArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CallDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountActionDefaultArgs instead
     */
    export type AccountActionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountActionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UploadBatchDefaultArgs instead
     */
    export type UploadBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UploadBatchDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}